
byggeren2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000954  000009e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000954  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  0080011a  0080011a  00000a02  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017ac  00000000  00000000  00000bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c0c  00000000  00000000  00002364  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a1f  00000000  00000000  00002f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f0  00000000  00000000  00003990  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000650  00000000  00000000  00003c80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000995  00000000  00000000  000042d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00004c65  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <__data_load_end+0x1d4>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	11 e0       	ldi	r17, 0x01	; 1
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	e4 e5       	ldi	r30, 0x54	; 84
 37c:	f9 e0       	ldi	r31, 0x09	; 9
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	aa 31       	cpi	r26, 0x1A	; 26
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	aa e1       	ldi	r26, 0x1A	; 26
 38e:	b1 e0       	ldi	r27, 0x01	; 1
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	a4 32       	cpi	r26, 0x24	; 36
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <main>
 39e:	0c 94 a8 04 	jmp	0x950	; 0x950 <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <clk>:

#define x_offset 160
#define y_offset 162


void clk (int max){
 3a6:	9c 01       	movw	r18, r24
	DDRD |= (1<< DDD4);//PD4 som output
 3a8:	91 b3       	in	r25, 0x11	; 17
 3aa:	90 61       	ori	r25, 0x10	; 16
 3ac:	91 bb       	out	0x11, r25	; 17
	TCCR3A |= (1<< COM3A0);
 3ae:	eb e8       	ldi	r30, 0x8B	; 139
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	90 81       	ld	r25, Z
 3b4:	90 64       	ori	r25, 0x40	; 64
 3b6:	90 83       	st	Z, r25
	TCCR3B |= (1<< WGM32);
 3b8:	ea e8       	ldi	r30, 0x8A	; 138
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	90 81       	ld	r25, Z
 3be:	98 60       	ori	r25, 0x08	; 8
 3c0:	90 83       	st	Z, r25
	OCR3A = max;
 3c2:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
 3c6:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	TCCR3B |= (1<< CS30);
 3ca:	80 81       	ld	r24, Z
 3cc:	81 60       	ori	r24, 0x01	; 1
 3ce:	80 83       	st	Z, r24
 3d0:	08 95       	ret

000003d2 <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{
	oled_write_command(0x81);
 3d2:	81 e8       	ldi	r24, 0x81	; 129
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	oled_write_command(0b1111111);
 3da:	8f e7       	ldi	r24, 0x7F	; 127
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	oled_write_command(0xe3);
 3e2:	83 ee       	ldi	r24, 0xE3	; 227
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	//oled_write_command(0b1111111);
	oled_write_command(0xaf); //Turn on LCD screen
 3ea:	8f ea       	ldi	r24, 0xAF	; 175
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	oled_write_command(0x20); // set memory addressing mode
 3f2:	80 e2       	ldi	r24, 0x20	; 32
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	oled_write_command(0b10); // set page addressing mode
 3fa:	82 e0       	ldi	r24, 0x02	; 2
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	oled_write_command(0x2a);
 402:	8a e2       	ldi	r24, 0x2A	; 42
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	oled_write_command(0xae);
 40a:	8e ea       	ldi	r24, 0xAE	; 174
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
	
	UART_init(MYUBRR);
 412:	8f e1       	ldi	r24, 0x1F	; 31
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 0c 03 	call	0x618	; 0x618 <UART_init>
	SRAM_init();
 41a:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <SRAM_init>
	clk(0);
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <clk>
	oled_clear();
 426:	0e 94 9b 02 	call	0x536	; 0x536 <oled_clear>
	oled_init();
 42a:	0e 94 22 02 	call	0x444	; 0x444 <oled_init>
	//SRAM_test();
	
	//oled_goto_line(0);
	//oled_goto_column(0);
	
	oled_print("!!!!HelloWorld!!!!");
 42e:	86 e0       	ldi	r24, 0x06	; 6
 430:	91 e0       	ldi	r25, 0x01	; 1
 432:	0e 94 de 02 	call	0x5bc	; 0x5bc <oled_print>
 436:	ff cf       	rjmp	.-2      	; 0x436 <__DATA_REGION_LENGTH__+0x36>

00000438 <oled_write_command>:
}

void oled_pos(int line, int coll){
	oled_goto_line(line);
	oled_goto_column(coll);
}
 438:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xedc>
 43c:	08 95       	ret

0000043e <oled_write_data>:
 43e:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0x10dc>
 442:	08 95       	ret

00000444 <oled_init>:
 444:	81 ea       	ldi	r24, 0xA1	; 161
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 44c:	8a ed       	ldi	r24, 0xDA	; 218
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 454:	82 e1       	ldi	r24, 0x12	; 18
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 45c:	88 ec       	ldi	r24, 0xC8	; 200
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 464:	88 ea       	ldi	r24, 0xA8	; 168
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 46c:	8f e3       	ldi	r24, 0x3F	; 63
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 474:	85 ed       	ldi	r24, 0xD5	; 213
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 47c:	80 e8       	ldi	r24, 0x80	; 128
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 484:	81 e8       	ldi	r24, 0x81	; 129
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 48c:	80 e5       	ldi	r24, 0x50	; 80
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 494:	89 ed       	ldi	r24, 0xD9	; 217
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 49c:	81 e2       	ldi	r24, 0x21	; 33
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4a4:	80 e2       	ldi	r24, 0x20	; 32
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4ac:	82 e0       	ldi	r24, 0x02	; 2
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4b4:	8b ed       	ldi	r24, 0xDB	; 219
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4bc:	80 e3       	ldi	r24, 0x30	; 48
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4c4:	8d ea       	ldi	r24, 0xAD	; 173
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4d4:	84 ea       	ldi	r24, 0xA4	; 164
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4dc:	86 ea       	ldi	r24, 0xA6	; 166
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4e4:	8f ea       	ldi	r24, 0xAF	; 175
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4ec:	08 95       	ret

000004ee <oled_goto_line>:
 4ee:	80 55       	subi	r24, 0x50	; 80
 4f0:	9f 4f       	sbci	r25, 0xFF	; 255
 4f2:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 4f6:	08 95       	ret

000004f8 <oled_goto_column>:
 4f8:	cf 93       	push	r28
 4fa:	df 93       	push	r29
 4fc:	ec 01       	movw	r28, r24
 4fe:	8f 70       	andi	r24, 0x0F	; 15
 500:	90 78       	andi	r25, 0x80	; 128
 502:	99 23       	and	r25, r25
 504:	24 f4       	brge	.+8      	; 0x50e <__stack+0xf>
 506:	01 97       	sbiw	r24, 0x01	; 1
 508:	80 6f       	ori	r24, 0xF0	; 240
 50a:	9f 6f       	ori	r25, 0xFF	; 255
 50c:	01 96       	adiw	r24, 0x01	; 1
 50e:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 512:	ce 01       	movw	r24, r28
 514:	dd 23       	and	r29, r29
 516:	0c f4       	brge	.+2      	; 0x51a <__stack+0x1b>
 518:	0f 96       	adiw	r24, 0x0f	; 15
 51a:	95 95       	asr	r25
 51c:	87 95       	ror	r24
 51e:	95 95       	asr	r25
 520:	87 95       	ror	r24
 522:	95 95       	asr	r25
 524:	87 95       	ror	r24
 526:	95 95       	asr	r25
 528:	87 95       	ror	r24
 52a:	40 96       	adiw	r24, 0x10	; 16
 52c:	0e 94 1c 02 	call	0x438	; 0x438 <oled_write_command>
 530:	df 91       	pop	r29
 532:	cf 91       	pop	r28
 534:	08 95       	ret

00000536 <oled_clear>:
 536:	0f 93       	push	r16
 538:	1f 93       	push	r17
 53a:	cf 93       	push	r28
 53c:	df 93       	push	r29
 53e:	00 e0       	ldi	r16, 0x00	; 0
 540:	10 e0       	ldi	r17, 0x00	; 0
 542:	14 c0       	rjmp	.+40     	; 0x56c <oled_clear+0x36>
 544:	c8 01       	movw	r24, r16
 546:	0e 94 77 02 	call	0x4ee	; 0x4ee <oled_goto_line>
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <oled_goto_column>
 552:	c0 e0       	ldi	r28, 0x00	; 0
 554:	d0 e0       	ldi	r29, 0x00	; 0
 556:	05 c0       	rjmp	.+10     	; 0x562 <oled_clear+0x2c>
 558:	80 e0       	ldi	r24, 0x00	; 0
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	0e 94 1f 02 	call	0x43e	; 0x43e <oled_write_data>
 560:	21 96       	adiw	r28, 0x01	; 1
 562:	c0 38       	cpi	r28, 0x80	; 128
 564:	d1 05       	cpc	r29, r1
 566:	c4 f3       	brlt	.-16     	; 0x558 <oled_clear+0x22>
 568:	0f 5f       	subi	r16, 0xFF	; 255
 56a:	1f 4f       	sbci	r17, 0xFF	; 255
 56c:	08 30       	cpi	r16, 0x08	; 8
 56e:	11 05       	cpc	r17, r1
 570:	4c f3       	brlt	.-46     	; 0x544 <oled_clear+0xe>
 572:	df 91       	pop	r29
 574:	cf 91       	pop	r28
 576:	1f 91       	pop	r17
 578:	0f 91       	pop	r16
 57a:	08 95       	ret

0000057c <oled_print_char>:


void oled_print_char(char ch) {
 57c:	1f 93       	push	r17
 57e:	cf 93       	push	r28
 580:	df 93       	push	r29
	ch -= 32;
 582:	10 ee       	ldi	r17, 0xE0	; 224
 584:	18 0f       	add	r17, r24
	for (int i = 0; i < 8; i++) {
 586:	c0 e0       	ldi	r28, 0x00	; 0
 588:	d0 e0       	ldi	r29, 0x00	; 0
 58a:	11 c0       	rjmp	.+34     	; 0x5ae <oled_print_char+0x32>
		//change of font8[ch][i] to font8[12][i]
		int byte = pgm_read_byte(&font8[ch][i]);
 58c:	e1 2f       	mov	r30, r17
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	ee 0f       	add	r30, r30
 592:	ff 1f       	adc	r31, r31
 594:	ee 0f       	add	r30, r30
 596:	ff 1f       	adc	r31, r31
 598:	ee 0f       	add	r30, r30
 59a:	ff 1f       	adc	r31, r31
 59c:	ec 0f       	add	r30, r28
 59e:	fd 1f       	adc	r31, r29
 5a0:	e0 59       	subi	r30, 0x90	; 144
 5a2:	ff 4f       	sbci	r31, 0xFF	; 255
 5a4:	84 91       	lpm	r24, Z
		oled_write_data(byte);
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 1f 02 	call	0x43e	; 0x43e <oled_write_data>
}


void oled_print_char(char ch) {
	ch -= 32;
	for (int i = 0; i < 8; i++) {
 5ac:	21 96       	adiw	r28, 0x01	; 1
 5ae:	c8 30       	cpi	r28, 0x08	; 8
 5b0:	d1 05       	cpc	r29, r1
 5b2:	64 f3       	brlt	.-40     	; 0x58c <oled_print_char+0x10>
		//change of font8[ch][i] to font8[12][i]
		int byte = pgm_read_byte(&font8[ch][i]);
		oled_write_data(byte);
	}
}
 5b4:	df 91       	pop	r29
 5b6:	cf 91       	pop	r28
 5b8:	1f 91       	pop	r17
 5ba:	08 95       	ret

000005bc <oled_print>:

void oled_print( char ch[]) {
 5bc:	0f 93       	push	r16
 5be:	1f 93       	push	r17
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	8c 01       	movw	r16, r24
	
	for (int i = 0; i < strlen(ch); i++) {
 5c6:	c0 e0       	ldi	r28, 0x00	; 0
 5c8:	d0 e0       	ldi	r29, 0x00	; 0
 5ca:	07 c0       	rjmp	.+14     	; 0x5da <oled_print+0x1e>
		
		oled_print_char(ch[i]);
 5cc:	f8 01       	movw	r30, r16
 5ce:	ec 0f       	add	r30, r28
 5d0:	fd 1f       	adc	r31, r29
 5d2:	80 81       	ld	r24, Z
 5d4:	0e 94 be 02 	call	0x57c	; 0x57c <oled_print_char>
	}
}

void oled_print( char ch[]) {
	
	for (int i = 0; i < strlen(ch); i++) {
 5d8:	21 96       	adiw	r28, 0x01	; 1
 5da:	f8 01       	movw	r30, r16
 5dc:	01 90       	ld	r0, Z+
 5de:	00 20       	and	r0, r0
 5e0:	e9 f7       	brne	.-6      	; 0x5dc <oled_print+0x20>
 5e2:	31 97       	sbiw	r30, 0x01	; 1
 5e4:	e0 1b       	sub	r30, r16
 5e6:	f1 0b       	sbc	r31, r17
 5e8:	ce 17       	cp	r28, r30
 5ea:	df 07       	cpc	r29, r31
 5ec:	78 f3       	brcs	.-34     	; 0x5cc <oled_print+0x10>
		
		oled_print_char(ch[i]);
	}
}
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	1f 91       	pop	r17
 5f4:	0f 91       	pop	r16
 5f6:	08 95       	ret

000005f8 <SRAM_init>:

#include "SRAM.h"
#define BASE_ADDRESS 0x1800

void SRAM_init(void) {
	MCUCR |= (1 << SRE);
 5f8:	85 b7       	in	r24, 0x35	; 53
 5fa:	80 68       	ori	r24, 0x80	; 128
 5fc:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1 << XMM2); //fjerner JTAG
 5fe:	80 b7       	in	r24, 0x30	; 48
 600:	80 62       	ori	r24, 0x20	; 32
 602:	80 bf       	out	0x30, r24	; 48
 604:	08 95       	ret

00000606 <UART_Transmitt>:



void UART_Transmitt (unsigned char data, FILE * file){//, FILE * file
	
	while (!(UCSR0A & (1<<UDRE0)))
 606:	5d 9b       	sbis	0x0b, 5	; 11
 608:	fe cf       	rjmp	.-4      	; 0x606 <UART_Transmitt>
	;
	UDR0 = data;
 60a:	8c b9       	out	0x0c, r24	; 12
 60c:	08 95       	ret

0000060e <UART_Receive>:
	
}

unsigned char UART_Receive (FILE * file){//FILE * file
	
	while (!(UCSR0A &(1<<RXC0))){
 60e:	5f 99       	sbic	0x0b, 7	; 11
 610:	02 c0       	rjmp	.+4      	; 0x616 <UART_Receive+0x8>
		
		return UDR0;
 612:	8c b1       	in	r24, 0x0c	; 12
 614:	08 95       	ret
	}
}
 616:	08 95       	ret

00000618 <UART_init>:

void UART_init ( unsigned int ubrr ){
	
	UBRR0H = (unsigned char)(ubrr>>8);
 618:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
 61a:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 61c:	88 e1       	ldi	r24, 0x18	; 24
 61e:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 620:	8e e8       	ldi	r24, 0x8E	; 142
 622:	80 bd       	out	0x20, r24	; 32
	
	fdevopen(UART_Transmitt, UART_Receive);
 624:	67 e0       	ldi	r22, 0x07	; 7
 626:	73 e0       	ldi	r23, 0x03	; 3
 628:	83 e0       	ldi	r24, 0x03	; 3
 62a:	93 e0       	ldi	r25, 0x03	; 3
 62c:	0e 94 3a 04 	call	0x874	; 0x874 <fdevopen>
 630:	08 95       	ret

00000632 <malloc>:
 632:	0f 93       	push	r16
 634:	1f 93       	push	r17
 636:	cf 93       	push	r28
 638:	df 93       	push	r29
 63a:	82 30       	cpi	r24, 0x02	; 2
 63c:	91 05       	cpc	r25, r1
 63e:	10 f4       	brcc	.+4      	; 0x644 <malloc+0x12>
 640:	82 e0       	ldi	r24, 0x02	; 2
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <__flp>
 648:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <__flp+0x1>
 64c:	20 e0       	ldi	r18, 0x00	; 0
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	a0 e0       	ldi	r26, 0x00	; 0
 652:	b0 e0       	ldi	r27, 0x00	; 0
 654:	30 97       	sbiw	r30, 0x00	; 0
 656:	19 f1       	breq	.+70     	; 0x69e <malloc+0x6c>
 658:	40 81       	ld	r20, Z
 65a:	51 81       	ldd	r21, Z+1	; 0x01
 65c:	02 81       	ldd	r16, Z+2	; 0x02
 65e:	13 81       	ldd	r17, Z+3	; 0x03
 660:	48 17       	cp	r20, r24
 662:	59 07       	cpc	r21, r25
 664:	c8 f0       	brcs	.+50     	; 0x698 <malloc+0x66>
 666:	84 17       	cp	r24, r20
 668:	95 07       	cpc	r25, r21
 66a:	69 f4       	brne	.+26     	; 0x686 <malloc+0x54>
 66c:	10 97       	sbiw	r26, 0x00	; 0
 66e:	31 f0       	breq	.+12     	; 0x67c <malloc+0x4a>
 670:	12 96       	adiw	r26, 0x02	; 2
 672:	0c 93       	st	X, r16
 674:	12 97       	sbiw	r26, 0x02	; 2
 676:	13 96       	adiw	r26, 0x03	; 3
 678:	1c 93       	st	X, r17
 67a:	27 c0       	rjmp	.+78     	; 0x6ca <malloc+0x98>
 67c:	00 93 1c 01 	sts	0x011C, r16	; 0x80011c <__flp>
 680:	10 93 1d 01 	sts	0x011D, r17	; 0x80011d <__flp+0x1>
 684:	22 c0       	rjmp	.+68     	; 0x6ca <malloc+0x98>
 686:	21 15       	cp	r18, r1
 688:	31 05       	cpc	r19, r1
 68a:	19 f0       	breq	.+6      	; 0x692 <malloc+0x60>
 68c:	42 17       	cp	r20, r18
 68e:	53 07       	cpc	r21, r19
 690:	18 f4       	brcc	.+6      	; 0x698 <malloc+0x66>
 692:	9a 01       	movw	r18, r20
 694:	bd 01       	movw	r22, r26
 696:	ef 01       	movw	r28, r30
 698:	df 01       	movw	r26, r30
 69a:	f8 01       	movw	r30, r16
 69c:	db cf       	rjmp	.-74     	; 0x654 <malloc+0x22>
 69e:	21 15       	cp	r18, r1
 6a0:	31 05       	cpc	r19, r1
 6a2:	f9 f0       	breq	.+62     	; 0x6e2 <malloc+0xb0>
 6a4:	28 1b       	sub	r18, r24
 6a6:	39 0b       	sbc	r19, r25
 6a8:	24 30       	cpi	r18, 0x04	; 4
 6aa:	31 05       	cpc	r19, r1
 6ac:	80 f4       	brcc	.+32     	; 0x6ce <malloc+0x9c>
 6ae:	8a 81       	ldd	r24, Y+2	; 0x02
 6b0:	9b 81       	ldd	r25, Y+3	; 0x03
 6b2:	61 15       	cp	r22, r1
 6b4:	71 05       	cpc	r23, r1
 6b6:	21 f0       	breq	.+8      	; 0x6c0 <malloc+0x8e>
 6b8:	fb 01       	movw	r30, r22
 6ba:	93 83       	std	Z+3, r25	; 0x03
 6bc:	82 83       	std	Z+2, r24	; 0x02
 6be:	04 c0       	rjmp	.+8      	; 0x6c8 <malloc+0x96>
 6c0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <__flp+0x1>
 6c4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <__flp>
 6c8:	fe 01       	movw	r30, r28
 6ca:	32 96       	adiw	r30, 0x02	; 2
 6cc:	44 c0       	rjmp	.+136    	; 0x756 <malloc+0x124>
 6ce:	fe 01       	movw	r30, r28
 6d0:	e2 0f       	add	r30, r18
 6d2:	f3 1f       	adc	r31, r19
 6d4:	81 93       	st	Z+, r24
 6d6:	91 93       	st	Z+, r25
 6d8:	22 50       	subi	r18, 0x02	; 2
 6da:	31 09       	sbc	r19, r1
 6dc:	39 83       	std	Y+1, r19	; 0x01
 6de:	28 83       	st	Y, r18
 6e0:	3a c0       	rjmp	.+116    	; 0x756 <malloc+0x124>
 6e2:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
 6e6:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
 6ea:	23 2b       	or	r18, r19
 6ec:	41 f4       	brne	.+16     	; 0x6fe <malloc+0xcc>
 6ee:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 6f2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 6f6:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <__data_end+0x1>
 6fa:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__data_end>
 6fe:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 702:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 706:	21 15       	cp	r18, r1
 708:	31 05       	cpc	r19, r1
 70a:	41 f4       	brne	.+16     	; 0x71c <malloc+0xea>
 70c:	2d b7       	in	r18, 0x3d	; 61
 70e:	3e b7       	in	r19, 0x3e	; 62
 710:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 714:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 718:	24 1b       	sub	r18, r20
 71a:	35 0b       	sbc	r19, r21
 71c:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end>
 720:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x1>
 724:	e2 17       	cp	r30, r18
 726:	f3 07       	cpc	r31, r19
 728:	a0 f4       	brcc	.+40     	; 0x752 <malloc+0x120>
 72a:	2e 1b       	sub	r18, r30
 72c:	3f 0b       	sbc	r19, r31
 72e:	28 17       	cp	r18, r24
 730:	39 07       	cpc	r19, r25
 732:	78 f0       	brcs	.+30     	; 0x752 <malloc+0x120>
 734:	ac 01       	movw	r20, r24
 736:	4e 5f       	subi	r20, 0xFE	; 254
 738:	5f 4f       	sbci	r21, 0xFF	; 255
 73a:	24 17       	cp	r18, r20
 73c:	35 07       	cpc	r19, r21
 73e:	48 f0       	brcs	.+18     	; 0x752 <malloc+0x120>
 740:	4e 0f       	add	r20, r30
 742:	5f 1f       	adc	r21, r31
 744:	50 93 1b 01 	sts	0x011B, r21	; 0x80011b <__data_end+0x1>
 748:	40 93 1a 01 	sts	0x011A, r20	; 0x80011a <__data_end>
 74c:	81 93       	st	Z+, r24
 74e:	91 93       	st	Z+, r25
 750:	02 c0       	rjmp	.+4      	; 0x756 <malloc+0x124>
 752:	e0 e0       	ldi	r30, 0x00	; 0
 754:	f0 e0       	ldi	r31, 0x00	; 0
 756:	cf 01       	movw	r24, r30
 758:	df 91       	pop	r29
 75a:	cf 91       	pop	r28
 75c:	1f 91       	pop	r17
 75e:	0f 91       	pop	r16
 760:	08 95       	ret

00000762 <free>:
 762:	cf 93       	push	r28
 764:	df 93       	push	r29
 766:	00 97       	sbiw	r24, 0x00	; 0
 768:	09 f4       	brne	.+2      	; 0x76c <free+0xa>
 76a:	81 c0       	rjmp	.+258    	; 0x86e <free+0x10c>
 76c:	fc 01       	movw	r30, r24
 76e:	32 97       	sbiw	r30, 0x02	; 2
 770:	13 82       	std	Z+3, r1	; 0x03
 772:	12 82       	std	Z+2, r1	; 0x02
 774:	a0 91 1c 01 	lds	r26, 0x011C	; 0x80011c <__flp>
 778:	b0 91 1d 01 	lds	r27, 0x011D	; 0x80011d <__flp+0x1>
 77c:	10 97       	sbiw	r26, 0x00	; 0
 77e:	81 f4       	brne	.+32     	; 0x7a0 <free+0x3e>
 780:	20 81       	ld	r18, Z
 782:	31 81       	ldd	r19, Z+1	; 0x01
 784:	82 0f       	add	r24, r18
 786:	93 1f       	adc	r25, r19
 788:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
 78c:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
 790:	28 17       	cp	r18, r24
 792:	39 07       	cpc	r19, r25
 794:	51 f5       	brne	.+84     	; 0x7ea <free+0x88>
 796:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__data_end+0x1>
 79a:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__data_end>
 79e:	67 c0       	rjmp	.+206    	; 0x86e <free+0x10c>
 7a0:	ed 01       	movw	r28, r26
 7a2:	20 e0       	ldi	r18, 0x00	; 0
 7a4:	30 e0       	ldi	r19, 0x00	; 0
 7a6:	ce 17       	cp	r28, r30
 7a8:	df 07       	cpc	r29, r31
 7aa:	40 f4       	brcc	.+16     	; 0x7bc <free+0x5a>
 7ac:	4a 81       	ldd	r20, Y+2	; 0x02
 7ae:	5b 81       	ldd	r21, Y+3	; 0x03
 7b0:	9e 01       	movw	r18, r28
 7b2:	41 15       	cp	r20, r1
 7b4:	51 05       	cpc	r21, r1
 7b6:	f1 f0       	breq	.+60     	; 0x7f4 <free+0x92>
 7b8:	ea 01       	movw	r28, r20
 7ba:	f5 cf       	rjmp	.-22     	; 0x7a6 <free+0x44>
 7bc:	d3 83       	std	Z+3, r29	; 0x03
 7be:	c2 83       	std	Z+2, r28	; 0x02
 7c0:	40 81       	ld	r20, Z
 7c2:	51 81       	ldd	r21, Z+1	; 0x01
 7c4:	84 0f       	add	r24, r20
 7c6:	95 1f       	adc	r25, r21
 7c8:	c8 17       	cp	r28, r24
 7ca:	d9 07       	cpc	r29, r25
 7cc:	59 f4       	brne	.+22     	; 0x7e4 <free+0x82>
 7ce:	88 81       	ld	r24, Y
 7d0:	99 81       	ldd	r25, Y+1	; 0x01
 7d2:	84 0f       	add	r24, r20
 7d4:	95 1f       	adc	r25, r21
 7d6:	02 96       	adiw	r24, 0x02	; 2
 7d8:	91 83       	std	Z+1, r25	; 0x01
 7da:	80 83       	st	Z, r24
 7dc:	8a 81       	ldd	r24, Y+2	; 0x02
 7de:	9b 81       	ldd	r25, Y+3	; 0x03
 7e0:	93 83       	std	Z+3, r25	; 0x03
 7e2:	82 83       	std	Z+2, r24	; 0x02
 7e4:	21 15       	cp	r18, r1
 7e6:	31 05       	cpc	r19, r1
 7e8:	29 f4       	brne	.+10     	; 0x7f4 <free+0x92>
 7ea:	f0 93 1d 01 	sts	0x011D, r31	; 0x80011d <__flp+0x1>
 7ee:	e0 93 1c 01 	sts	0x011C, r30	; 0x80011c <__flp>
 7f2:	3d c0       	rjmp	.+122    	; 0x86e <free+0x10c>
 7f4:	e9 01       	movw	r28, r18
 7f6:	fb 83       	std	Y+3, r31	; 0x03
 7f8:	ea 83       	std	Y+2, r30	; 0x02
 7fa:	49 91       	ld	r20, Y+
 7fc:	59 91       	ld	r21, Y+
 7fe:	c4 0f       	add	r28, r20
 800:	d5 1f       	adc	r29, r21
 802:	ec 17       	cp	r30, r28
 804:	fd 07       	cpc	r31, r29
 806:	61 f4       	brne	.+24     	; 0x820 <free+0xbe>
 808:	80 81       	ld	r24, Z
 80a:	91 81       	ldd	r25, Z+1	; 0x01
 80c:	84 0f       	add	r24, r20
 80e:	95 1f       	adc	r25, r21
 810:	02 96       	adiw	r24, 0x02	; 2
 812:	e9 01       	movw	r28, r18
 814:	99 83       	std	Y+1, r25	; 0x01
 816:	88 83       	st	Y, r24
 818:	82 81       	ldd	r24, Z+2	; 0x02
 81a:	93 81       	ldd	r25, Z+3	; 0x03
 81c:	9b 83       	std	Y+3, r25	; 0x03
 81e:	8a 83       	std	Y+2, r24	; 0x02
 820:	e0 e0       	ldi	r30, 0x00	; 0
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	12 96       	adiw	r26, 0x02	; 2
 826:	8d 91       	ld	r24, X+
 828:	9c 91       	ld	r25, X
 82a:	13 97       	sbiw	r26, 0x03	; 3
 82c:	00 97       	sbiw	r24, 0x00	; 0
 82e:	19 f0       	breq	.+6      	; 0x836 <free+0xd4>
 830:	fd 01       	movw	r30, r26
 832:	dc 01       	movw	r26, r24
 834:	f7 cf       	rjmp	.-18     	; 0x824 <free+0xc2>
 836:	8d 91       	ld	r24, X+
 838:	9c 91       	ld	r25, X
 83a:	11 97       	sbiw	r26, 0x01	; 1
 83c:	9d 01       	movw	r18, r26
 83e:	2e 5f       	subi	r18, 0xFE	; 254
 840:	3f 4f       	sbci	r19, 0xFF	; 255
 842:	82 0f       	add	r24, r18
 844:	93 1f       	adc	r25, r19
 846:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
 84a:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
 84e:	28 17       	cp	r18, r24
 850:	39 07       	cpc	r19, r25
 852:	69 f4       	brne	.+26     	; 0x86e <free+0x10c>
 854:	30 97       	sbiw	r30, 0x00	; 0
 856:	29 f4       	brne	.+10     	; 0x862 <free+0x100>
 858:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <__flp+0x1>
 85c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__flp>
 860:	02 c0       	rjmp	.+4      	; 0x866 <free+0x104>
 862:	13 82       	std	Z+3, r1	; 0x03
 864:	12 82       	std	Z+2, r1	; 0x02
 866:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <__data_end+0x1>
 86a:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <__data_end>
 86e:	df 91       	pop	r29
 870:	cf 91       	pop	r28
 872:	08 95       	ret

00000874 <fdevopen>:
 874:	0f 93       	push	r16
 876:	1f 93       	push	r17
 878:	cf 93       	push	r28
 87a:	df 93       	push	r29
 87c:	00 97       	sbiw	r24, 0x00	; 0
 87e:	31 f4       	brne	.+12     	; 0x88c <fdevopen+0x18>
 880:	61 15       	cp	r22, r1
 882:	71 05       	cpc	r23, r1
 884:	19 f4       	brne	.+6      	; 0x88c <fdevopen+0x18>
 886:	80 e0       	ldi	r24, 0x00	; 0
 888:	90 e0       	ldi	r25, 0x00	; 0
 88a:	3a c0       	rjmp	.+116    	; 0x900 <fdevopen+0x8c>
 88c:	8b 01       	movw	r16, r22
 88e:	ec 01       	movw	r28, r24
 890:	6e e0       	ldi	r22, 0x0E	; 14
 892:	70 e0       	ldi	r23, 0x00	; 0
 894:	81 e0       	ldi	r24, 0x01	; 1
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	0e 94 85 04 	call	0x90a	; 0x90a <calloc>
 89c:	fc 01       	movw	r30, r24
 89e:	89 2b       	or	r24, r25
 8a0:	91 f3       	breq	.-28     	; 0x886 <fdevopen+0x12>
 8a2:	80 e8       	ldi	r24, 0x80	; 128
 8a4:	83 83       	std	Z+3, r24	; 0x03
 8a6:	01 15       	cp	r16, r1
 8a8:	11 05       	cpc	r17, r1
 8aa:	71 f0       	breq	.+28     	; 0x8c8 <fdevopen+0x54>
 8ac:	13 87       	std	Z+11, r17	; 0x0b
 8ae:	02 87       	std	Z+10, r16	; 0x0a
 8b0:	81 e8       	ldi	r24, 0x81	; 129
 8b2:	83 83       	std	Z+3, r24	; 0x03
 8b4:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__iob>
 8b8:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__iob+0x1>
 8bc:	89 2b       	or	r24, r25
 8be:	21 f4       	brne	.+8      	; 0x8c8 <fdevopen+0x54>
 8c0:	f0 93 1f 01 	sts	0x011F, r31	; 0x80011f <__iob+0x1>
 8c4:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <__iob>
 8c8:	20 97       	sbiw	r28, 0x00	; 0
 8ca:	c9 f0       	breq	.+50     	; 0x8fe <fdevopen+0x8a>
 8cc:	d1 87       	std	Z+9, r29	; 0x09
 8ce:	c0 87       	std	Z+8, r28	; 0x08
 8d0:	83 81       	ldd	r24, Z+3	; 0x03
 8d2:	82 60       	ori	r24, 0x02	; 2
 8d4:	83 83       	std	Z+3, r24	; 0x03
 8d6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__iob+0x2>
 8da:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__iob+0x3>
 8de:	89 2b       	or	r24, r25
 8e0:	71 f4       	brne	.+28     	; 0x8fe <fdevopen+0x8a>
 8e2:	f0 93 21 01 	sts	0x0121, r31	; 0x800121 <__iob+0x3>
 8e6:	e0 93 20 01 	sts	0x0120, r30	; 0x800120 <__iob+0x2>
 8ea:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__iob+0x4>
 8ee:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__iob+0x5>
 8f2:	89 2b       	or	r24, r25
 8f4:	21 f4       	brne	.+8      	; 0x8fe <fdevopen+0x8a>
 8f6:	f0 93 23 01 	sts	0x0123, r31	; 0x800123 <__iob+0x5>
 8fa:	e0 93 22 01 	sts	0x0122, r30	; 0x800122 <__iob+0x4>
 8fe:	cf 01       	movw	r24, r30
 900:	df 91       	pop	r29
 902:	cf 91       	pop	r28
 904:	1f 91       	pop	r17
 906:	0f 91       	pop	r16
 908:	08 95       	ret

0000090a <calloc>:
 90a:	0f 93       	push	r16
 90c:	1f 93       	push	r17
 90e:	cf 93       	push	r28
 910:	df 93       	push	r29
 912:	86 9f       	mul	r24, r22
 914:	80 01       	movw	r16, r0
 916:	87 9f       	mul	r24, r23
 918:	10 0d       	add	r17, r0
 91a:	96 9f       	mul	r25, r22
 91c:	10 0d       	add	r17, r0
 91e:	11 24       	eor	r1, r1
 920:	c8 01       	movw	r24, r16
 922:	0e 94 19 03 	call	0x632	; 0x632 <malloc>
 926:	ec 01       	movw	r28, r24
 928:	00 97       	sbiw	r24, 0x00	; 0
 92a:	29 f0       	breq	.+10     	; 0x936 <calloc+0x2c>
 92c:	a8 01       	movw	r20, r16
 92e:	60 e0       	ldi	r22, 0x00	; 0
 930:	70 e0       	ldi	r23, 0x00	; 0
 932:	0e 94 a1 04 	call	0x942	; 0x942 <memset>
 936:	ce 01       	movw	r24, r28
 938:	df 91       	pop	r29
 93a:	cf 91       	pop	r28
 93c:	1f 91       	pop	r17
 93e:	0f 91       	pop	r16
 940:	08 95       	ret

00000942 <memset>:
 942:	dc 01       	movw	r26, r24
 944:	01 c0       	rjmp	.+2      	; 0x948 <memset+0x6>
 946:	6d 93       	st	X+, r22
 948:	41 50       	subi	r20, 0x01	; 1
 94a:	50 40       	sbci	r21, 0x00	; 0
 94c:	e0 f7       	brcc	.-8      	; 0x946 <memset+0x4>
 94e:	08 95       	ret

00000950 <_exit>:
 950:	f8 94       	cli

00000952 <__stop_program>:
 952:	ff cf       	rjmp	.-2      	; 0x952 <__stop_program>
