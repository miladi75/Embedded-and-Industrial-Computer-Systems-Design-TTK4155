
byggeren2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f8  00800100  0000173a  000017ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000173a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  008001f8  008001f8  000018c6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001924  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  00001960  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ca5  00000000  00000000  00001c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001348  00000000  00000000  000048a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000152c  00000000  00000000  00005bed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005f8  00000000  00000000  0000711c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000980  00000000  00000000  00007714  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001444  00000000  00000000  00008094  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000258  00000000  00000000  000094d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <oled_goto_column+0x28>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ea e3       	ldi	r30, 0x3A	; 58
     37c:	f7 e1       	ldi	r31, 0x17	; 23
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 3f       	cpi	r26, 0xF8	; 248
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	a8 ef       	ldi	r26, 0xF8	; 248
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a6 30       	cpi	r26, 0x06	; 6
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 3b 03 	call	0x676	; 0x676 <main>
     39e:	0c 94 9b 0b 	jmp	0x1736	; 0x1736 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_init>:
//#include "adc.h"
#include "JOYSTICK.h"
//#include "buttons.h"

void can_init() {
	mcp_init();
     3a6:	0e 94 09 05 	call	0xa12	; 0xa12 <mcp_init>
	mcp_set_mode(MODE_LOOPBACK);
     3aa:	80 e4       	ldi	r24, 0x40	; 64
     3ac:	0e 94 27 05 	call	0xa4e	; 0xa4e <mcp_set_mode>

	mcp_bit_modify(MCP_CANINTE, 0b11111111, 0b1); // Turn on interrupt for receive butter 0. Turn off all other interrupts.
     3b0:	41 e0       	ldi	r20, 0x01	; 1
     3b2:	6f ef       	ldi	r22, 0xFF	; 255
     3b4:	8b e2       	ldi	r24, 0x2B	; 43
     3b6:	0e 94 e7 04 	call	0x9ce	; 0x9ce <mcp_bit_modify>
     3ba:	08 95       	ret

000003bc <can_send>:
}

void can_send(message_t* message) {
     3bc:	0f 93       	push	r16
     3be:	1f 93       	push	r17
     3c0:	cf 93       	push	r28
     3c2:	df 93       	push	r29
     3c4:	8c 01       	movw	r16, r24
	// Only using buffer 0.

	// Id. TXBnSIDH og TXBnSIDL
	mcp_write(MCP_TXB0SIDH, message->id / 8); // 8 MSB bits in the ID
     3c6:	fc 01       	movw	r30, r24
     3c8:	60 81       	ld	r22, Z
     3ca:	71 81       	ldd	r23, Z+1	; 0x01
     3cc:	76 95       	lsr	r23
     3ce:	67 95       	ror	r22
     3d0:	76 95       	lsr	r23
     3d2:	67 95       	ror	r22
     3d4:	76 95       	lsr	r23
     3d6:	67 95       	ror	r22
     3d8:	81 e3       	ldi	r24, 0x31	; 49
     3da:	0e 94 b4 04 	call	0x968	; 0x968 <mcp_write>
	//mcp_write(MCP_TXB0SIDL, (message->id % 8) << 5); // 3 LSB bits in the ID
	mcp_write(MCP_TXB0SIDL, (message->id % 8)); // 3 LSB bits in the ID
     3de:	f8 01       	movw	r30, r16
     3e0:	60 81       	ld	r22, Z
     3e2:	67 70       	andi	r22, 0x07	; 7
     3e4:	82 e3       	ldi	r24, 0x32	; 50
     3e6:	0e 94 b4 04 	call	0x968	; 0x968 <mcp_write>

	// Data length. TXBnDLC
	mcp_write(MCP_TXB0DLC, message->length);
     3ea:	f8 01       	movw	r30, r16
     3ec:	62 81       	ldd	r22, Z+2	; 0x02
     3ee:	85 e3       	ldi	r24, 0x35	; 53
     3f0:	0e 94 b4 04 	call	0x968	; 0x968 <mcp_write>

	// Data (optional). TXBnDm
	for (int i = 0; i < message->length; i++) {
     3f4:	c0 e0       	ldi	r28, 0x00	; 0
     3f6:	d0 e0       	ldi	r29, 0x00	; 0
     3f8:	09 c0       	rjmp	.+18     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
		mcp_write(MCP_TXB0D0 + i, message->data[i]);
     3fa:	f8 01       	movw	r30, r16
     3fc:	ec 0f       	add	r30, r28
     3fe:	fd 1f       	adc	r31, r29
     400:	63 81       	ldd	r22, Z+3	; 0x03
     402:	8c 2f       	mov	r24, r28
     404:	8a 5c       	subi	r24, 0xCA	; 202
     406:	0e 94 b4 04 	call	0x968	; 0x968 <mcp_write>

	// Data length. TXBnDLC
	mcp_write(MCP_TXB0DLC, message->length);

	// Data (optional). TXBnDm
	for (int i = 0; i < message->length; i++) {
     40a:	21 96       	adiw	r28, 0x01	; 1
     40c:	f8 01       	movw	r30, r16
     40e:	82 81       	ldd	r24, Z+2	; 0x02
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	c8 17       	cp	r28, r24
     414:	d9 07       	cpc	r29, r25
     416:	8c f3       	brlt	.-30     	; 0x3fa <can_send+0x3e>
		mcp_write(MCP_TXB0D0 + i, message->data[i]);
	}

	// Request to send
	mcp_request_to_send(0);
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 c8 04 	call	0x990	; 0x990 <mcp_request_to_send>
}
     420:	df 91       	pop	r29
     422:	cf 91       	pop	r28
     424:	1f 91       	pop	r17
     426:	0f 91       	pop	r16
     428:	08 95       	ret

0000042a <can_receive>:

void can_receive(message_t *msg) {
     42a:	0f 93       	push	r16
     42c:	1f 93       	push	r17
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	8c 01       	movw	r16, r24
	// Only using buffer 0.
	//message_t message;

	// Id. RXBnSIDH og RXBnSIDL
	uint8_t id_low = mcp_read(MCP_RXB0SIDL)/0b100000;
     434:	82 e6       	ldi	r24, 0x62	; 98
     436:	0e 94 a2 04 	call	0x944	; 0x944 <mcp_read>
     43a:	c8 2f       	mov	r28, r24
     43c:	c2 95       	swap	r28
     43e:	c6 95       	lsr	r28
     440:	c7 70       	andi	r28, 0x07	; 7
	uint8_t id_high = mcp_read(MCP_RXB0SIDH);
     442:	81 e6       	ldi	r24, 0x61	; 97
     444:	0e 94 a2 04 	call	0x944	; 0x944 <mcp_read>
	msg->id = id_high * 0b1000 + id_low;
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	88 0f       	add	r24, r24
     44c:	99 1f       	adc	r25, r25
     44e:	88 0f       	add	r24, r24
     450:	99 1f       	adc	r25, r25
     452:	88 0f       	add	r24, r24
     454:	99 1f       	adc	r25, r25
     456:	8c 0f       	add	r24, r28
     458:	91 1d       	adc	r25, r1
     45a:	f8 01       	movw	r30, r16
     45c:	91 83       	std	Z+1, r25	; 0x01
     45e:	80 83       	st	Z, r24

	// Data length. RXBnDLC
	msg->length = mcp_read(MCP_RXB0DLC);
     460:	85 e6       	ldi	r24, 0x65	; 101
     462:	0e 94 a2 04 	call	0x944	; 0x944 <mcp_read>
     466:	f8 01       	movw	r30, r16
     468:	82 83       	std	Z+2, r24	; 0x02

	// Data (optional). RXBnDM
	for (int i = 0; i < msg->length; i++) {
     46a:	c0 e0       	ldi	r28, 0x00	; 0
     46c:	d0 e0       	ldi	r29, 0x00	; 0
     46e:	09 c0       	rjmp	.+18     	; 0x482 <can_receive+0x58>
		msg->data[i] = mcp_read(MCP_RXB0D0 + i);
     470:	8c 2f       	mov	r24, r28
     472:	8a 59       	subi	r24, 0x9A	; 154
     474:	0e 94 a2 04 	call	0x944	; 0x944 <mcp_read>
     478:	f8 01       	movw	r30, r16
     47a:	ec 0f       	add	r30, r28
     47c:	fd 1f       	adc	r31, r29
     47e:	83 83       	std	Z+3, r24	; 0x03

	// Data length. RXBnDLC
	msg->length = mcp_read(MCP_RXB0DLC);

	// Data (optional). RXBnDM
	for (int i = 0; i < msg->length; i++) {
     480:	21 96       	adiw	r28, 0x01	; 1
     482:	f8 01       	movw	r30, r16
     484:	82 81       	ldd	r24, Z+2	; 0x02
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c8 17       	cp	r28, r24
     48a:	d9 07       	cpc	r29, r25
     48c:	8c f3       	brlt	.-30     	; 0x470 <can_receive+0x46>
		msg->data[i] = mcp_read(MCP_RXB0D0 + i);
	}


     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	1f 91       	pop	r17
     494:	0f 91       	pop	r16
     496:	08 95       	ret

00000498 <clk>:

	uint8_t verdisr = adc[0];
	int pos = verdisr;
	
	return pos;
}
     498:	9c 01       	movw	r18, r24
     49a:	91 b3       	in	r25, 0x11	; 17
     49c:	90 61       	ori	r25, 0x10	; 16
     49e:	91 bb       	out	0x11, r25	; 17
     4a0:	eb e8       	ldi	r30, 0x8B	; 139
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	90 81       	ld	r25, Z
     4a6:	90 64       	ori	r25, 0x40	; 64
     4a8:	90 83       	st	Z, r25
     4aa:	ea e8       	ldi	r30, 0x8A	; 138
     4ac:	f0 e0       	ldi	r31, 0x00	; 0
     4ae:	90 81       	ld	r25, Z
     4b0:	98 60       	ori	r25, 0x08	; 8
     4b2:	90 83       	st	Z, r25
     4b4:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     4b8:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     4bc:	80 81       	ld	r24, Z
     4be:	81 60       	ori	r24, 0x01	; 1
     4c0:	80 83       	st	Z, r24
     4c2:	08 95       	ret

000004c4 <joy_read_x>:
     4c4:	e0 e0       	ldi	r30, 0x00	; 0
     4c6:	f4 e1       	ldi	r31, 0x14	; 20
     4c8:	84 e8       	ldi	r24, 0x84	; 132
     4ca:	80 83       	st	Z, r24
     4cc:	86 e0       	ldi	r24, 0x06	; 6
     4ce:	8a 95       	dec	r24
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <joy_read_x+0xa>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <joy_read_x+0x10>
     4d4:	20 81       	ld	r18, Z
     4d6:	30 e0       	ldi	r19, 0x00	; 0
     4d8:	20 5a       	subi	r18, 0xA0	; 160
     4da:	31 09       	sbc	r19, r1
     4dc:	44 e6       	ldi	r20, 0x64	; 100
     4de:	42 9f       	mul	r20, r18
     4e0:	c0 01       	movw	r24, r0
     4e2:	43 9f       	mul	r20, r19
     4e4:	90 0d       	add	r25, r0
     4e6:	11 24       	eor	r1, r1
     4e8:	6f e7       	ldi	r22, 0x7F	; 127
     4ea:	70 e0       	ldi	r23, 0x00	; 0
     4ec:	0e 94 d6 06 	call	0xdac	; 0xdac <__divmodhi4>
     4f0:	cb 01       	movw	r24, r22
     4f2:	18 16       	cp	r1, r24
     4f4:	19 06       	cpc	r1, r25
     4f6:	64 f4       	brge	.+24     	; 0x510 <__stack+0x11>
     4f8:	24 e6       	ldi	r18, 0x64	; 100
     4fa:	26 9f       	mul	r18, r22
     4fc:	c0 01       	movw	r24, r0
     4fe:	27 9f       	mul	r18, r23
     500:	90 0d       	add	r25, r0
     502:	11 24       	eor	r1, r1
     504:	63 e4       	ldi	r22, 0x43	; 67
     506:	70 e0       	ldi	r23, 0x00	; 0
     508:	0e 94 d6 06 	call	0xdac	; 0xdac <__divmodhi4>
     50c:	cb 01       	movw	r24, r22
     50e:	08 95       	ret
     510:	99 23       	and	r25, r25
     512:	5c f4       	brge	.+22     	; 0x52a <__stack+0x2b>
     514:	24 e6       	ldi	r18, 0x64	; 100
     516:	26 9f       	mul	r18, r22
     518:	c0 01       	movw	r24, r0
     51a:	27 9f       	mul	r18, r23
     51c:	90 0d       	add	r25, r0
     51e:	11 24       	eor	r1, r1
     520:	65 e8       	ldi	r22, 0x85	; 133
     522:	70 e0       	ldi	r23, 0x00	; 0
     524:	0e 94 d6 06 	call	0xdac	; 0xdac <__divmodhi4>
     528:	cb 01       	movw	r24, r22
     52a:	08 95       	ret

0000052c <joy_read_y>:
     52c:	e0 e0       	ldi	r30, 0x00	; 0
     52e:	f4 e1       	ldi	r31, 0x14	; 20
     530:	81 e8       	ldi	r24, 0x81	; 129
     532:	80 83       	st	Z, r24
     534:	86 e0       	ldi	r24, 0x06	; 6
     536:	8a 95       	dec	r24
     538:	f1 f7       	brne	.-4      	; 0x536 <joy_read_y+0xa>
     53a:	00 c0       	rjmp	.+0      	; 0x53c <joy_read_y+0x10>
     53c:	20 81       	ld	r18, Z
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	22 5a       	subi	r18, 0xA2	; 162
     542:	31 09       	sbc	r19, r1
     544:	44 e6       	ldi	r20, 0x64	; 100
     546:	42 9f       	mul	r20, r18
     548:	c0 01       	movw	r24, r0
     54a:	43 9f       	mul	r20, r19
     54c:	90 0d       	add	r25, r0
     54e:	11 24       	eor	r1, r1
     550:	6f e7       	ldi	r22, 0x7F	; 127
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	0e 94 d6 06 	call	0xdac	; 0xdac <__divmodhi4>
     558:	cb 01       	movw	r24, r22
     55a:	18 16       	cp	r1, r24
     55c:	19 06       	cpc	r1, r25
     55e:	64 f4       	brge	.+24     	; 0x578 <joy_read_y+0x4c>
     560:	24 e6       	ldi	r18, 0x64	; 100
     562:	26 9f       	mul	r18, r22
     564:	c0 01       	movw	r24, r0
     566:	27 9f       	mul	r18, r23
     568:	90 0d       	add	r25, r0
     56a:	11 24       	eor	r1, r1
     56c:	61 e4       	ldi	r22, 0x41	; 65
     56e:	70 e0       	ldi	r23, 0x00	; 0
     570:	0e 94 d6 06 	call	0xdac	; 0xdac <__divmodhi4>
     574:	cb 01       	movw	r24, r22
     576:	08 95       	ret
     578:	99 23       	and	r25, r25
     57a:	5c f4       	brge	.+22     	; 0x592 <joy_read_y+0x66>
     57c:	24 e6       	ldi	r18, 0x64	; 100
     57e:	26 9f       	mul	r18, r22
     580:	c0 01       	movw	r24, r0
     582:	27 9f       	mul	r18, r23
     584:	90 0d       	add	r25, r0
     586:	11 24       	eor	r1, r1
     588:	67 e8       	ldi	r22, 0x87	; 135
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	0e 94 d6 06 	call	0xdac	; 0xdac <__divmodhi4>
     590:	cb 01       	movw	r24, r22
     592:	08 95       	ret

00000594 <joystick_pos>:

joystick_dir_t   joystick_pos() {
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
	
	int x = joy_read_x();
     598:	0e 94 62 02 	call	0x4c4	; 0x4c4 <joy_read_x>
     59c:	ec 01       	movw	r28, r24
	int y = joy_read_y();
     59e:	0e 94 96 02 	call	0x52c	; 0x52c <joy_read_y>
	
	if (abs(x) >= abs(y)){
     5a2:	9e 01       	movw	r18, r28
     5a4:	dd 23       	and	r29, r29
     5a6:	24 f4       	brge	.+8      	; 0x5b0 <joystick_pos+0x1c>
     5a8:	22 27       	eor	r18, r18
     5aa:	33 27       	eor	r19, r19
     5ac:	2c 1b       	sub	r18, r28
     5ae:	3d 0b       	sbc	r19, r29
     5b0:	ac 01       	movw	r20, r24
     5b2:	99 23       	and	r25, r25
     5b4:	24 f4       	brge	.+8      	; 0x5be <joystick_pos+0x2a>
     5b6:	44 27       	eor	r20, r20
     5b8:	55 27       	eor	r21, r21
     5ba:	48 1b       	sub	r20, r24
     5bc:	59 0b       	sbc	r21, r25
     5be:	24 17       	cp	r18, r20
     5c0:	35 07       	cpc	r19, r21
     5c2:	54 f0       	brlt	.+20     	; 0x5d8 <joystick_pos+0x44>
		if (abs(x) < 10){
     5c4:	ce 01       	movw	r24, r28
     5c6:	09 96       	adiw	r24, 0x09	; 9
     5c8:	43 97       	sbiw	r24, 0x13	; 19
     5ca:	08 f1       	brcs	.+66     	; 0x60e <joystick_pos+0x7a>
			return NEUTRAL;
		}
		else if (x < 50){
     5cc:	c2 33       	cpi	r28, 0x32	; 50
     5ce:	d1 05       	cpc	r29, r1
     5d0:	04 f1       	brlt	.+64     	; 0x612 <joystick_pos+0x7e>
			return LEFT;
		}
		else if (x > 50) {
     5d2:	e3 97       	sbiw	r28, 0x33	; 51
     5d4:	04 f5       	brge	.+64     	; 0x616 <joystick_pos+0x82>
     5d6:	0c c0       	rjmp	.+24     	; 0x5f0 <joystick_pos+0x5c>
			return RIGHT;
		}
	}
	else{
		if (abs(y) < 65){
     5d8:	9c 01       	movw	r18, r24
     5da:	20 5c       	subi	r18, 0xC0	; 192
     5dc:	3f 4f       	sbci	r19, 0xFF	; 255
     5de:	21 38       	cpi	r18, 0x81	; 129
     5e0:	31 05       	cpc	r19, r1
     5e2:	d8 f0       	brcs	.+54     	; 0x61a <joystick_pos+0x86>
			return NEUTRAL;
		}
		else if (y < -50){
     5e4:	8e 3c       	cpi	r24, 0xCE	; 206
     5e6:	2f ef       	ldi	r18, 0xFF	; 255
     5e8:	92 07       	cpc	r25, r18
     5ea:	cc f0       	brlt	.+50     	; 0x61e <joystick_pos+0x8a>
			return DOWN;
		}
		else if (y > 50) {
     5ec:	c3 97       	sbiw	r24, 0x33	; 51
     5ee:	cc f4       	brge	.+50     	; 0x622 <joystick_pos+0x8e>
			return UP;
		}
	}
	printf("pos: %d", joystick_pos());
     5f0:	0e 94 ca 02 	call	0x594	; 0x594 <joystick_pos>
     5f4:	1f 92       	push	r1
     5f6:	8f 93       	push	r24
     5f8:	80 e1       	ldi	r24, 0x10	; 16
     5fa:	91 e0       	ldi	r25, 0x01	; 1
     5fc:	9f 93       	push	r25
     5fe:	8f 93       	push	r24
     600:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>
}
     604:	0f 90       	pop	r0
     606:	0f 90       	pop	r0
     608:	0f 90       	pop	r0
     60a:	0f 90       	pop	r0
     60c:	0b c0       	rjmp	.+22     	; 0x624 <joystick_pos+0x90>
	int x = joy_read_x();
	int y = joy_read_y();
	
	if (abs(x) >= abs(y)){
		if (abs(x) < 10){
			return NEUTRAL;
     60e:	84 e0       	ldi	r24, 0x04	; 4
     610:	09 c0       	rjmp	.+18     	; 0x624 <joystick_pos+0x90>
		}
		else if (x < 50){
			return LEFT;
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	07 c0       	rjmp	.+14     	; 0x624 <joystick_pos+0x90>
		}
		else if (x > 50) {
			return RIGHT;
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	05 c0       	rjmp	.+10     	; 0x624 <joystick_pos+0x90>
		}
	}
	else{
		if (abs(y) < 65){
			return NEUTRAL;
     61a:	84 e0       	ldi	r24, 0x04	; 4
     61c:	03 c0       	rjmp	.+6      	; 0x624 <joystick_pos+0x90>
		}
		else if (y < -50){
			return DOWN;
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	01 c0       	rjmp	.+2      	; 0x624 <joystick_pos+0x90>
		}
		else if (y > 50) {
			return UP;
     622:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
	printf("pos: %d", joystick_pos());
}
     624:	df 91       	pop	r29
     626:	cf 91       	pop	r28
     628:	08 95       	ret

0000062a <print_dir_type>:
volatile int line = 0;
volatile int menu = 0;


void print_dir_type(joystick_dir_t dir){
	switch(dir){
     62a:	82 30       	cpi	r24, 0x02	; 2
     62c:	59 f0       	breq	.+22     	; 0x644 <print_dir_type+0x1a>
     62e:	28 f4       	brcc	.+10     	; 0x63a <print_dir_type+0x10>
     630:	88 23       	and	r24, r24
     632:	b9 f0       	breq	.+46     	; 0x662 <print_dir_type+0x38>
     634:	81 30       	cpi	r24, 0x01	; 1
     636:	81 f0       	breq	.+32     	; 0x658 <print_dir_type+0x2e>
     638:	08 95       	ret
     63a:	83 30       	cpi	r24, 0x03	; 3
     63c:	41 f0       	breq	.+16     	; 0x64e <print_dir_type+0x24>
     63e:	84 30       	cpi	r24, 0x04	; 4
     640:	a9 f0       	breq	.+42     	; 0x66c <print_dir_type+0x42>
     642:	08 95       	ret
		case UP:
			printf("\nUP\n");
     644:	83 e2       	ldi	r24, 0x23	; 35
     646:	91 e0       	ldi	r25, 0x01	; 1
     648:	0e 94 80 08 	call	0x1100	; 0x1100 <puts>
			break;
     64c:	08 95       	ret
		case DOWN:
			printf("\nDOWN\n");
     64e:	87 e2       	ldi	r24, 0x27	; 39
     650:	91 e0       	ldi	r25, 0x01	; 1
     652:	0e 94 80 08 	call	0x1100	; 0x1100 <puts>
			break;
     656:	08 95       	ret
			
		case RIGHT:
			printf("\nRIGHT\n");
     658:	8d e2       	ldi	r24, 0x2D	; 45
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	0e 94 80 08 	call	0x1100	; 0x1100 <puts>
			break;
     660:	08 95       	ret
		
		case LEFT:
			printf("\nLEFT\n");
     662:	84 e3       	ldi	r24, 0x34	; 52
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	0e 94 80 08 	call	0x1100	; 0x1100 <puts>
			break;
     66a:	08 95       	ret

		case NEUTRAL:
			printf("\nNEUTRAL\n");
     66c:	8a e3       	ldi	r24, 0x3A	; 58
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	0e 94 80 08 	call	0x1100	; 0x1100 <puts>
     674:	08 95       	ret

00000676 <main>:
			
	}
}

int main(void)
{
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	cd b7       	in	r28, 0x3d	; 61
     67c:	de b7       	in	r29, 0x3e	; 62
     67e:	66 97       	sbiw	r28, 0x16	; 22
     680:	0f b6       	in	r0, 0x3f	; 63
     682:	f8 94       	cli
     684:	de bf       	out	0x3e, r29	; 62
     686:	0f be       	out	0x3f, r0	; 63
     688:	cd bf       	out	0x3d, r28	; 61
	oled_write_command(0x81);
     68a:	81 e8       	ldi	r24, 0x81	; 129
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	oled_write_command(0b1111111);
     692:	8f e7       	ldi	r24, 0x7F	; 127
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	oled_write_command(0xe3);
     69a:	83 ee       	ldi	r24, 0xE3	; 227
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	//oled_write_command(0b1111111);
	oled_write_command(0xaf); //Turn on LCD screen
     6a2:	8f ea       	ldi	r24, 0xAF	; 175
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	oled_write_command(0x20); // set memory addressing mode
     6aa:	80 e2       	ldi	r24, 0x20	; 32
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	oled_write_command(0b10); // set page addressing mode
     6b2:	82 e0       	ldi	r24, 0x02	; 2
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	oled_write_command(0x2a);
     6ba:	8a e2       	ldi	r24, 0x2A	; 42
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	oled_write_command(0xae);
     6c2:	8e ea       	ldi	r24, 0xAE	; 174
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
	
	UART_init(MYUBRR);
     6ca:	8f e1       	ldi	r24, 0x1F	; 31
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	0e 94 c9 06 	call	0xd92	; 0xd92 <UART_init>
	SRAM_init();
     6d2:	0e 94 b9 06 	call	0xd72	; 0xd72 <SRAM_init>
	clk(0);
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	0e 94 4c 02 	call	0x498	; 0x498 <clk>
	oled_clear();
     6de:	0e 94 ac 05 	call	0xb58	; 0xb58 <oled_clear>
	oled_init();
     6e2:	0e 94 33 05 	call	0xa66	; 0xa66 <oled_init>
	
	
	//can test
	
	message_t message;
	message.id		= 50;
     6e6:	82 e3       	ldi	r24, 0x32	; 50
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	9a 83       	std	Y+2, r25	; 0x02
     6ec:	89 83       	std	Y+1, r24	; 0x01
	message.data[0]	= 'H';
     6ee:	88 e4       	ldi	r24, 0x48	; 72
     6f0:	8c 83       	std	Y+4, r24	; 0x04
	message.data[1]	= 'e';
     6f2:	85 e6       	ldi	r24, 0x65	; 101
     6f4:	8d 83       	std	Y+5, r24	; 0x05
	message.data[2]	= 'l';
     6f6:	8c e6       	ldi	r24, 0x6C	; 108
     6f8:	8e 83       	std	Y+6, r24	; 0x06
	message.data[3]	= 'l';
     6fa:	8f 83       	std	Y+7, r24	; 0x07
	message.data[4]	= 'o';
     6fc:	8f e6       	ldi	r24, 0x6F	; 111
     6fe:	88 87       	std	Y+8, r24	; 0x08
	message.length	= 5;
     700:	85 e0       	ldi	r24, 0x05	; 5
     702:	8b 83       	std	Y+3, r24	; 0x03

	
	can_init(); //
     704:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_init>
	mcp_set_mode(MODE_LOOPBACK); //mode_loopback 0x40
     708:	80 e4       	ldi	r24, 0x40	; 64
     70a:	0e 94 27 05 	call	0xa4e	; 0xa4e <mcp_set_mode>
		//3, // id
		//6, //data length
		//"abcdef" // data max 8 bytes
	//};
	//
	printf("----->test sendt\r\n");
     70e:	83 e4       	ldi	r24, 0x43	; 67
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	0e 94 80 08 	call	0x1100	; 0x1100 <puts>
	
	printf("id: %d \r\n", message.id);
     716:	8a 81       	ldd	r24, Y+2	; 0x02
     718:	8f 93       	push	r24
     71a:	89 81       	ldd	r24, Y+1	; 0x01
     71c:	8f 93       	push	r24
     71e:	0f 2e       	mov	r0, r31
     720:	f5 e5       	ldi	r31, 0x55	; 85
     722:	cf 2e       	mov	r12, r31
     724:	f1 e0       	ldi	r31, 0x01	; 1
     726:	df 2e       	mov	r13, r31
     728:	f0 2d       	mov	r31, r0
     72a:	df 92       	push	r13
     72c:	cf 92       	push	r12
     72e:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>
	printf("lengde: %d \r\n", message.length);
     732:	8b 81       	ldd	r24, Y+3	; 0x03
     734:	1f 92       	push	r1
     736:	8f 93       	push	r24
     738:	0f 2e       	mov	r0, r31
     73a:	ff e5       	ldi	r31, 0x5F	; 95
     73c:	ef 2e       	mov	r14, r31
     73e:	f1 e0       	ldi	r31, 0x01	; 1
     740:	ff 2e       	mov	r15, r31
     742:	f0 2d       	mov	r31, r0
     744:	ff 92       	push	r15
     746:	ef 92       	push	r14
     748:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>
	printf("melding: %s \r\n\r\n", message.data);
     74c:	ce 01       	movw	r24, r28
     74e:	04 96       	adiw	r24, 0x04	; 4
     750:	9f 93       	push	r25
     752:	8f 93       	push	r24
     754:	0d e6       	ldi	r16, 0x6D	; 109
     756:	11 e0       	ldi	r17, 0x01	; 1
     758:	1f 93       	push	r17
     75a:	0f 93       	push	r16
     75c:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>


	can_send(&message);
     760:	ce 01       	movw	r24, r28
     762:	01 96       	adiw	r24, 0x01	; 1
     764:	0e 94 de 01 	call	0x3bc	; 0x3bc <can_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     768:	2f eb       	ldi	r18, 0xBF	; 191
     76a:	84 ed       	ldi	r24, 0xD4	; 212
     76c:	91 e0       	ldi	r25, 0x01	; 1
     76e:	21 50       	subi	r18, 0x01	; 1
     770:	80 40       	sbci	r24, 0x00	; 0
     772:	90 40       	sbci	r25, 0x00	; 0
     774:	e1 f7       	brne	.-8      	; 0x76e <main+0xf8>
     776:	00 c0       	rjmp	.+0      	; 0x778 <main+0x102>
     778:	00 00       	nop

	_delay_ms(600);
	
	// mottar melding
	message_t mymsg;
	can_receive(&mymsg);
     77a:	ce 01       	movw	r24, r28
     77c:	0c 96       	adiw	r24, 0x0c	; 12
     77e:	0e 94 15 02 	call	0x42a	; 0x42a <can_receive>
	
	printf("msg received\r\n");
     782:	8e e7       	ldi	r24, 0x7E	; 126
     784:	91 e0       	ldi	r25, 0x01	; 1
     786:	0e 94 80 08 	call	0x1100	; 0x1100 <puts>
	printf("id: %d \r\n", mymsg.id);
     78a:	8d 85       	ldd	r24, Y+13	; 0x0d
     78c:	8f 93       	push	r24
     78e:	8c 85       	ldd	r24, Y+12	; 0x0c
     790:	8f 93       	push	r24
     792:	df 92       	push	r13
     794:	cf 92       	push	r12
     796:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>
	printf("lengde: %d \r\n", mymsg.length);
     79a:	8e 85       	ldd	r24, Y+14	; 0x0e
     79c:	1f 92       	push	r1
     79e:	8f 93       	push	r24
     7a0:	ff 92       	push	r15
     7a2:	ef 92       	push	r14
     7a4:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>
	printf("melding: %s \r\n\r\n", mymsg.data);
     7a8:	ce 01       	movw	r24, r28
     7aa:	0f 96       	adiw	r24, 0x0f	; 15
     7ac:	9f 93       	push	r25
     7ae:	8f 93       	push	r24
     7b0:	1f 93       	push	r17
     7b2:	0f 93       	push	r16
     7b4:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>
     7b8:	0f b6       	in	r0, 0x3f	; 63
     7ba:	f8 94       	cli
     7bc:	de bf       	out	0x3e, r29	; 62
     7be:	0f be       	out	0x3f, r0	; 63
     7c0:	cd bf       	out	0x3d, r28	; 61
		
		while (1) 
		{	
			
			
			spi_write("g");
     7c2:	8c e8       	ldi	r24, 0x8C	; 140
     7c4:	91 e0       	ldi	r25, 0x01	; 1
     7c6:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
     7ca:	9f e3       	ldi	r25, 0x3F	; 63
     7cc:	2d e0       	ldi	r18, 0x0D	; 13
     7ce:	83 e0       	ldi	r24, 0x03	; 3
     7d0:	91 50       	subi	r25, 0x01	; 1
     7d2:	20 40       	sbci	r18, 0x00	; 0
     7d4:	80 40       	sbci	r24, 0x00	; 0
     7d6:	e1 f7       	brne	.-8      	; 0x7d0 <main+0x15a>
     7d8:	00 c0       	rjmp	.+0      	; 0x7da <main+0x164>
     7da:	00 00       	nop
			_delay_ms(1000);
			
			joystick_pos();
     7dc:	0e 94 ca 02 	call	0x594	; 0x594 <joystick_pos>
			//printf("Y Pos: %d		", joy_read_y());
			//printf("Line:  %d \n",line);
			
		
			//_delay_us(500);
			joystick_dir_t dir = joystick_pos();
     7e0:	0e 94 ca 02 	call	0x594	; 0x594 <joystick_pos>
			print_dir_type(dir);
     7e4:	0e 94 15 03 	call	0x62a	; 0x62a <print_dir_type>
			
			if (joy_read_x() < -50 && menu > 0) {
     7e8:	0e 94 62 02 	call	0x4c4	; 0x4c4 <joy_read_x>
     7ec:	8e 3c       	cpi	r24, 0xCE	; 206
     7ee:	9f 4f       	sbci	r25, 0xFF	; 255
     7f0:	94 f4       	brge	.+36     	; 0x816 <main+0x1a0>
     7f2:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__data_end>
     7f6:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__data_end+0x1>
     7fa:	18 16       	cp	r1, r24
     7fc:	19 06       	cpc	r1, r25
     7fe:	5c f4       	brge	.+22     	; 0x816 <main+0x1a0>
				menu--;
     800:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__data_end>
     804:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__data_end+0x1>
     808:	01 97       	sbiw	r24, 0x01	; 1
     80a:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <__data_end+0x1>
     80e:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <__data_end>
				oled_clear();
     812:	0e 94 ac 05 	call	0xb58	; 0xb58 <oled_clear>
			}
			if (menu == 0) {
     816:	80 91 f8 01 	lds	r24, 0x01F8	; 0x8001f8 <__data_end>
     81a:	90 91 f9 01 	lds	r25, 0x01F9	; 0x8001f9 <__data_end+0x1>
     81e:	89 2b       	or	r24, r25
     820:	11 f4       	brne	.+4      	; 0x826 <main+0x1b0>
				oled_simple_menu();
     822:	0e 94 46 06 	call	0xc8c	; 0xc8c <oled_simple_menu>
			}	
				
			if (joy_read_y() < -50 && line < 7) {		
     826:	0e 94 96 02 	call	0x52c	; 0x52c <joy_read_y>
     82a:	8e 3c       	cpi	r24, 0xCE	; 206
     82c:	9f 4f       	sbci	r25, 0xFF	; 255
     82e:	4c f5       	brge	.+82     	; 0x882 <main+0x20c>
     830:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     834:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     838:	07 97       	sbiw	r24, 0x07	; 7
     83a:	1c f5       	brge	.+70     	; 0x882 <main+0x20c>
				line++;
     83c:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     840:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     844:	01 96       	adiw	r24, 0x01	; 1
     846:	90 93 fb 01 	sts	0x01FB, r25	; 0x8001fb <line+0x1>
     84a:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <line>
				OLED_print_arrow(line,0);
     84e:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     852:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	0e 94 18 06 	call	0xc30	; 0xc30 <OLED_print_arrow>
				OLED_clear_arrow(line-1,0);	
     85e:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     862:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	0e 94 2f 06 	call	0xc5e	; 0xc5e <OLED_clear_arrow>
     870:	8f e9       	ldi	r24, 0x9F	; 159
     872:	96 e8       	ldi	r25, 0x86	; 134
     874:	21 e0       	ldi	r18, 0x01	; 1
     876:	81 50       	subi	r24, 0x01	; 1
     878:	90 40       	sbci	r25, 0x00	; 0
     87a:	20 40       	sbci	r18, 0x00	; 0
     87c:	e1 f7       	brne	.-8      	; 0x876 <main+0x200>
     87e:	00 c0       	rjmp	.+0      	; 0x880 <main+0x20a>
     880:	00 00       	nop
				_delay_ms(500);	
			}
			
			if (joy_read_y() > 50 && line > 0) {
     882:	0e 94 96 02 	call	0x52c	; 0x52c <joy_read_y>
     886:	c3 97       	sbiw	r24, 0x33	; 51
     888:	54 f1       	brlt	.+84     	; 0x8de <main+0x268>
     88a:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     88e:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     892:	18 16       	cp	r1, r24
     894:	19 06       	cpc	r1, r25
     896:	1c f5       	brge	.+70     	; 0x8de <main+0x268>
				line--;
     898:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     89c:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     8a0:	01 97       	sbiw	r24, 0x01	; 1
     8a2:	90 93 fb 01 	sts	0x01FB, r25	; 0x8001fb <line+0x1>
     8a6:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <line>
				OLED_print_arrow(line,0);
     8aa:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     8ae:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     8b2:	60 e0       	ldi	r22, 0x00	; 0
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	0e 94 18 06 	call	0xc30	; 0xc30 <OLED_print_arrow>
				OLED_clear_arrow(line+1,0);		
     8ba:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     8be:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     8c2:	60 e0       	ldi	r22, 0x00	; 0
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	01 96       	adiw	r24, 0x01	; 1
     8c8:	0e 94 2f 06 	call	0xc5e	; 0xc5e <OLED_clear_arrow>
     8cc:	8f e9       	ldi	r24, 0x9F	; 159
     8ce:	96 e8       	ldi	r25, 0x86	; 134
     8d0:	21 e0       	ldi	r18, 0x01	; 1
     8d2:	81 50       	subi	r24, 0x01	; 1
     8d4:	90 40       	sbci	r25, 0x00	; 0
     8d6:	20 40       	sbci	r18, 0x00	; 0
     8d8:	e1 f7       	brne	.-8      	; 0x8d2 <main+0x25c>
     8da:	00 c0       	rjmp	.+0      	; 0x8dc <main+0x266>
     8dc:	00 00       	nop
				_delay_ms(500);
	
			}
			
			if(joy_read_x() > 50 && line == 5) {	//Higscore menu
     8de:	0e 94 62 02 	call	0x4c4	; 0x4c4 <joy_read_x>
     8e2:	c3 97       	sbiw	r24, 0x33	; 51
     8e4:	74 f0       	brlt	.+28     	; 0x902 <main+0x28c>
     8e6:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     8ea:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     8ee:	05 97       	sbiw	r24, 0x05	; 5
     8f0:	41 f4       	brne	.+16     	; 0x902 <main+0x28c>
				oled_highscores();		
     8f2:	0e 94 83 06 	call	0xd06	; 0xd06 <oled_highscores>
				menu = 1;
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <__data_end+0x1>
     8fe:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <__data_end>
					
			}
			if(joy_read_x() > 50 && line == 2) {	//PLAY GAME menu
     902:	0e 94 62 02 	call	0x4c4	; 0x4c4 <joy_read_x>
     906:	c3 97       	sbiw	r24, 0x33	; 51
     908:	74 f0       	brlt	.+28     	; 0x926 <main+0x2b0>
     90a:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     90e:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     912:	02 97       	sbiw	r24, 0x02	; 2
     914:	41 f4       	brne	.+16     	; 0x926 <main+0x2b0>
				oled_highscores();
     916:	0e 94 83 06 	call	0xd06	; 0xd06 <oled_highscores>
				menu = 1;
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	90 93 f9 01 	sts	0x01F9, r25	; 0x8001f9 <__data_end+0x1>
     922:	80 93 f8 01 	sts	0x01F8, r24	; 0x8001f8 <__data_end>
				
			}
			if(joy_read_x() > 50 && line == 5) {	//Higscore menu
     926:	0e 94 62 02 	call	0x4c4	; 0x4c4 <joy_read_x>
     92a:	c3 97       	sbiw	r24, 0x33	; 51
     92c:	0c f4       	brge	.+2      	; 0x930 <main+0x2ba>
     92e:	49 cf       	rjmp	.-366    	; 0x7c2 <main+0x14c>
     930:	80 91 fa 01 	lds	r24, 0x01FA	; 0x8001fa <line>
     934:	90 91 fb 01 	lds	r25, 0x01FB	; 0x8001fb <line+0x1>
     938:	05 97       	sbiw	r24, 0x05	; 5
     93a:	09 f0       	breq	.+2      	; 0x93e <main+0x2c8>
     93c:	42 cf       	rjmp	.-380    	; 0x7c2 <main+0x14c>
				oled_highscores();
     93e:	0e 94 83 06 	call	0xd06	; 0xd06 <oled_highscores>
     942:	3f cf       	rjmp	.-386    	; 0x7c2 <main+0x14c>

00000944 <mcp_read>:
	spi_write(MCP_READ_STATUS);
	char data = spi_read();
	spi_set_ss();

	return data;
}
     944:	cf 93       	push	r28
     946:	c8 2f       	mov	r28, r24
     948:	0e 94 b5 06 	call	0xd6a	; 0xd6a <spi_clear_ss>
     94c:	83 e0       	ldi	r24, 0x03	; 3
     94e:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
     952:	8c 2f       	mov	r24, r28
     954:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
     958:	0e 94 a4 06 	call	0xd48	; 0xd48 <spi_read>
     95c:	c8 2f       	mov	r28, r24
     95e:	0e 94 aa 06 	call	0xd54	; 0xd54 <spi_set_ss>
     962:	8c 2f       	mov	r24, r28
     964:	cf 91       	pop	r28
     966:	08 95       	ret

00000968 <mcp_write>:
     968:	cf 93       	push	r28
     96a:	df 93       	push	r29
     96c:	d8 2f       	mov	r29, r24
     96e:	c6 2f       	mov	r28, r22
     970:	0e 94 b5 06 	call	0xd6a	; 0xd6a <spi_clear_ss>
     974:	82 e0       	ldi	r24, 0x02	; 2
     976:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
     97a:	8d 2f       	mov	r24, r29
     97c:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
     980:	8c 2f       	mov	r24, r28
     982:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
     986:	0e 94 aa 06 	call	0xd54	; 0xd54 <spi_set_ss>
     98a:	df 91       	pop	r29
     98c:	cf 91       	pop	r28
     98e:	08 95       	ret

00000990 <mcp_request_to_send>:
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	ec 01       	movw	r28, r24
     996:	0e 94 b5 06 	call	0xd6a	; 0xd6a <spi_clear_ss>
     99a:	ce 01       	movw	r24, r28
     99c:	63 e0       	ldi	r22, 0x03	; 3
     99e:	70 e0       	ldi	r23, 0x00	; 0
     9a0:	0e 94 d6 06 	call	0xdac	; 0xdac <__divmodhi4>
     9a4:	00 97       	sbiw	r24, 0x00	; 0
     9a6:	39 f0       	breq	.+14     	; 0x9b6 <mcp_request_to_send+0x26>
     9a8:	81 30       	cpi	r24, 0x01	; 1
     9aa:	91 05       	cpc	r25, r1
     9ac:	31 f0       	breq	.+12     	; 0x9ba <mcp_request_to_send+0x2a>
     9ae:	02 97       	sbiw	r24, 0x02	; 2
     9b0:	31 f0       	breq	.+12     	; 0x9be <mcp_request_to_send+0x2e>
     9b2:	81 e8       	ldi	r24, 0x81	; 129
     9b4:	05 c0       	rjmp	.+10     	; 0x9c0 <mcp_request_to_send+0x30>
     9b6:	81 e8       	ldi	r24, 0x81	; 129
     9b8:	03 c0       	rjmp	.+6      	; 0x9c0 <mcp_request_to_send+0x30>
     9ba:	82 e8       	ldi	r24, 0x82	; 130
     9bc:	01 c0       	rjmp	.+2      	; 0x9c0 <mcp_request_to_send+0x30>
     9be:	84 e8       	ldi	r24, 0x84	; 132
     9c0:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
     9c4:	0e 94 aa 06 	call	0xd54	; 0xd54 <spi_set_ss>
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	08 95       	ret

000009ce <mcp_bit_modify>:

void mcp_bit_modify(uint8_t address, uint8_t mask, uint8_t data) {
     9ce:	1f 93       	push	r17
     9d0:	cf 93       	push	r28
     9d2:	df 93       	push	r29
     9d4:	18 2f       	mov	r17, r24
     9d6:	d6 2f       	mov	r29, r22
     9d8:	c4 2f       	mov	r28, r20
	spi_clear_ss();
     9da:	0e 94 b5 06 	call	0xd6a	; 0xd6a <spi_clear_ss>
	spi_write(MCP_BITMOD);
     9de:	85 e0       	ldi	r24, 0x05	; 5
     9e0:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
	spi_write(address);
     9e4:	81 2f       	mov	r24, r17
     9e6:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
	spi_write(mask);
     9ea:	8d 2f       	mov	r24, r29
     9ec:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
	spi_write(data);
     9f0:	8c 2f       	mov	r24, r28
     9f2:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
	spi_set_ss();
     9f6:	0e 94 aa 06 	call	0xd54	; 0xd54 <spi_set_ss>
}
     9fa:	df 91       	pop	r29
     9fc:	cf 91       	pop	r28
     9fe:	1f 91       	pop	r17
     a00:	08 95       	ret

00000a02 <mcp_reset>:

void mcp_reset() {
	spi_clear_ss();
     a02:	0e 94 b5 06 	call	0xd6a	; 0xd6a <spi_clear_ss>
	spi_write(MCP_RESET);
     a06:	80 ec       	ldi	r24, 0xC0	; 192
     a08:	0e 94 a0 06 	call	0xd40	; 0xd40 <spi_write>
	spi_set_ss();
     a0c:	0e 94 aa 06 	call	0xd54	; 0xd54 <spi_set_ss>
     a10:	08 95       	ret

00000a12 <mcp_init>:
#include <stdio.h>
#include <util/delay.h>


void mcp_init() {
	spi_master_init();
     a12:	0e 94 ae 06 	call	0xd5c	; 0xd5c <spi_master_init>
	mcp_reset();
     a16:	0e 94 01 05 	call	0xa02	; 0xa02 <mcp_reset>
     a1a:	89 ef       	ldi	r24, 0xF9	; 249
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	01 97       	sbiw	r24, 0x01	; 1
     a20:	f1 f7       	brne	.-4      	; 0xa1e <mcp_init+0xc>
     a22:	00 c0       	rjmp	.+0      	; 0xa24 <mcp_init+0x12>
     a24:	00 00       	nop

	_delay_ms(1); 
	
	// Self-test.
	uint8_t value = mcp_read(MCP_CANSTAT);
     a26:	8e e0       	ldi	r24, 0x0E	; 14
     a28:	0e 94 a2 04 	call	0x944	; 0x944 <mcp_read>
	if ((value & MODE_MASK) != MODE_CONFIG) {
     a2c:	98 2f       	mov	r25, r24
     a2e:	90 7e       	andi	r25, 0xE0	; 224
     a30:	90 38       	cpi	r25, 0x80	; 128
     a32:	61 f0       	breq	.+24     	; 0xa4c <mcp_init+0x3a>
		printf("MCP!config/MCP_CANSTAT %x \r\n", value);
     a34:	1f 92       	push	r1
     a36:	8f 93       	push	r24
     a38:	8e e8       	ldi	r24, 0x8E	; 142
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	9f 93       	push	r25
     a3e:	8f 93       	push	r24
     a40:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <printf>
     a44:	0f 90       	pop	r0
     a46:	0f 90       	pop	r0
     a48:	0f 90       	pop	r0
     a4a:	0f 90       	pop	r0
     a4c:	08 95       	ret

00000a4e <mcp_set_mode>:
	spi_write(MCP_RESET);
	spi_set_ss();
}

void mcp_set_mode(uint8_t mode) {
	mcp_bit_modify(MCP_CANCTRL, 0b11100000, mode);
     a4e:	48 2f       	mov	r20, r24
     a50:	60 ee       	ldi	r22, 0xE0	; 224
     a52:	8f e0       	ldi	r24, 0x0F	; 15
     a54:	0e 94 e7 04 	call	0x9ce	; 0x9ce <mcp_bit_modify>
     a58:	08 95       	ret

00000a5a <oled_write_command>:
     a5a:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xdfa>
     a5e:	08 95       	ret

00000a60 <oled_write_data>:
     a60:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xffa>
     a64:	08 95       	ret

00000a66 <oled_init>:
     a66:	81 ea       	ldi	r24, 0xA1	; 161
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     a6e:	8a ed       	ldi	r24, 0xDA	; 218
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     a76:	82 e1       	ldi	r24, 0x12	; 18
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     a7e:	88 ec       	ldi	r24, 0xC8	; 200
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     a86:	88 ea       	ldi	r24, 0xA8	; 168
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     a8e:	8f e3       	ldi	r24, 0x3F	; 63
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     a96:	85 ed       	ldi	r24, 0xD5	; 213
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     a9e:	80 e8       	ldi	r24, 0x80	; 128
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     aa6:	81 e8       	ldi	r24, 0x81	; 129
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     aae:	80 e5       	ldi	r24, 0x50	; 80
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     ab6:	89 ed       	ldi	r24, 0xD9	; 217
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     abe:	81 e2       	ldi	r24, 0x21	; 33
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     ac6:	80 e2       	ldi	r24, 0x20	; 32
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     ace:	82 e0       	ldi	r24, 0x02	; 2
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     ad6:	8b ed       	ldi	r24, 0xDB	; 219
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     ade:	80 e3       	ldi	r24, 0x30	; 48
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     ae6:	8d ea       	ldi	r24, 0xAD	; 173
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     af6:	84 ea       	ldi	r24, 0xA4	; 164
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     afe:	86 ea       	ldi	r24, 0xA6	; 166
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     b06:	8f ea       	ldi	r24, 0xAF	; 175
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     b0e:	08 95       	ret

00000b10 <oled_goto_line>:
     b10:	80 55       	subi	r24, 0x50	; 80
     b12:	9f 4f       	sbci	r25, 0xFF	; 255
     b14:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     b18:	08 95       	ret

00000b1a <oled_goto_column>:
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	ec 01       	movw	r28, r24
     b20:	8f 70       	andi	r24, 0x0F	; 15
     b22:	90 78       	andi	r25, 0x80	; 128
     b24:	99 23       	and	r25, r25
     b26:	24 f4       	brge	.+8      	; 0xb30 <oled_goto_column+0x16>
     b28:	01 97       	sbiw	r24, 0x01	; 1
     b2a:	80 6f       	ori	r24, 0xF0	; 240
     b2c:	9f 6f       	ori	r25, 0xFF	; 255
     b2e:	01 96       	adiw	r24, 0x01	; 1
     b30:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     b34:	ce 01       	movw	r24, r28
     b36:	dd 23       	and	r29, r29
     b38:	0c f4       	brge	.+2      	; 0xb3c <oled_goto_column+0x22>
     b3a:	0f 96       	adiw	r24, 0x0f	; 15
     b3c:	95 95       	asr	r25
     b3e:	87 95       	ror	r24
     b40:	95 95       	asr	r25
     b42:	87 95       	ror	r24
     b44:	95 95       	asr	r25
     b46:	87 95       	ror	r24
     b48:	95 95       	asr	r25
     b4a:	87 95       	ror	r24
     b4c:	40 96       	adiw	r24, 0x10	; 16
     b4e:	0e 94 2d 05 	call	0xa5a	; 0xa5a <oled_write_command>
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	08 95       	ret

00000b58 <oled_clear>:
     b58:	0f 93       	push	r16
     b5a:	1f 93       	push	r17
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	00 e0       	ldi	r16, 0x00	; 0
     b62:	10 e0       	ldi	r17, 0x00	; 0
     b64:	14 c0       	rjmp	.+40     	; 0xb8e <oled_clear+0x36>
     b66:	c8 01       	movw	r24, r16
     b68:	0e 94 88 05 	call	0xb10	; 0xb10 <oled_goto_line>
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 8d 05 	call	0xb1a	; 0xb1a <oled_goto_column>
     b74:	c0 e0       	ldi	r28, 0x00	; 0
     b76:	d0 e0       	ldi	r29, 0x00	; 0
     b78:	05 c0       	rjmp	.+10     	; 0xb84 <oled_clear+0x2c>
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     b82:	21 96       	adiw	r28, 0x01	; 1
     b84:	c0 38       	cpi	r28, 0x80	; 128
     b86:	d1 05       	cpc	r29, r1
     b88:	c4 f3       	brlt	.-16     	; 0xb7a <oled_clear+0x22>
     b8a:	0f 5f       	subi	r16, 0xFF	; 255
     b8c:	1f 4f       	sbci	r17, 0xFF	; 255
     b8e:	08 30       	cpi	r16, 0x08	; 8
     b90:	11 05       	cpc	r17, r1
     b92:	4c f3       	brlt	.-46     	; 0xb66 <oled_clear+0xe>
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	1f 91       	pop	r17
     b9a:	0f 91       	pop	r16
     b9c:	08 95       	ret

00000b9e <oled_pos>:
     b9e:	cf 93       	push	r28
     ba0:	df 93       	push	r29
     ba2:	eb 01       	movw	r28, r22
     ba4:	0e 94 88 05 	call	0xb10	; 0xb10 <oled_goto_line>
     ba8:	ce 01       	movw	r24, r28
     baa:	0e 94 8d 05 	call	0xb1a	; 0xb1a <oled_goto_column>
     bae:	df 91       	pop	r29
     bb0:	cf 91       	pop	r28
     bb2:	08 95       	ret

00000bb4 <oled_print_char>:
     bb4:	1f 93       	push	r17
     bb6:	cf 93       	push	r28
     bb8:	df 93       	push	r29
     bba:	10 ee       	ldi	r17, 0xE0	; 224
     bbc:	18 0f       	add	r17, r24
     bbe:	c0 e0       	ldi	r28, 0x00	; 0
     bc0:	d0 e0       	ldi	r29, 0x00	; 0
     bc2:	11 c0       	rjmp	.+34     	; 0xbe6 <oled_print_char+0x32>
     bc4:	e1 2f       	mov	r30, r17
     bc6:	f0 e0       	ldi	r31, 0x00	; 0
     bc8:	ee 0f       	add	r30, r30
     bca:	ff 1f       	adc	r31, r31
     bcc:	ee 0f       	add	r30, r30
     bce:	ff 1f       	adc	r31, r31
     bd0:	ee 0f       	add	r30, r30
     bd2:	ff 1f       	adc	r31, r31
     bd4:	ec 0f       	add	r30, r28
     bd6:	fd 1f       	adc	r31, r29
     bd8:	e0 59       	subi	r30, 0x90	; 144
     bda:	ff 4f       	sbci	r31, 0xFF	; 255
     bdc:	84 91       	lpm	r24, Z
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     be4:	21 96       	adiw	r28, 0x01	; 1
     be6:	c8 30       	cpi	r28, 0x08	; 8
     be8:	d1 05       	cpc	r29, r1
     bea:	64 f3       	brlt	.-40     	; 0xbc4 <oled_print_char+0x10>
     bec:	df 91       	pop	r29
     bee:	cf 91       	pop	r28
     bf0:	1f 91       	pop	r17
     bf2:	08 95       	ret

00000bf4 <oled_print>:
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	8c 01       	movw	r16, r24
     bfe:	c0 e0       	ldi	r28, 0x00	; 0
     c00:	d0 e0       	ldi	r29, 0x00	; 0
     c02:	07 c0       	rjmp	.+14     	; 0xc12 <oled_print+0x1e>
     c04:	f8 01       	movw	r30, r16
     c06:	ec 0f       	add	r30, r28
     c08:	fd 1f       	adc	r31, r29
     c0a:	80 81       	ld	r24, Z
     c0c:	0e 94 da 05 	call	0xbb4	; 0xbb4 <oled_print_char>
     c10:	21 96       	adiw	r28, 0x01	; 1
     c12:	f8 01       	movw	r30, r16
     c14:	01 90       	ld	r0, Z+
     c16:	00 20       	and	r0, r0
     c18:	e9 f7       	brne	.-6      	; 0xc14 <oled_print+0x20>
     c1a:	31 97       	sbiw	r30, 0x01	; 1
     c1c:	e0 1b       	sub	r30, r16
     c1e:	f1 0b       	sbc	r31, r17
     c20:	ce 17       	cp	r28, r30
     c22:	df 07       	cpc	r29, r31
     c24:	78 f3       	brcs	.-34     	; 0xc04 <oled_print+0x10>
     c26:	df 91       	pop	r29
     c28:	cf 91       	pop	r28
     c2a:	1f 91       	pop	r17
     c2c:	0f 91       	pop	r16
     c2e:	08 95       	ret

00000c30 <OLED_print_arrow>:
     c30:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
     c34:	88 e1       	ldi	r24, 0x18	; 24
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c3c:	88 e1       	ldi	r24, 0x18	; 24
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c44:	8e e7       	ldi	r24, 0x7E	; 126
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c4c:	8c e3       	ldi	r24, 0x3C	; 60
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c54:	88 e1       	ldi	r24, 0x18	; 24
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c5c:	08 95       	ret

00000c5e <OLED_clear_arrow>:
     c5e:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
     c62:	80 e0       	ldi	r24, 0x00	; 0
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c6a:	80 e0       	ldi	r24, 0x00	; 0
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c7a:	80 e0       	ldi	r24, 0x00	; 0
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 30 05 	call	0xa60	; 0xa60 <oled_write_data>
     c8a:	08 95       	ret

00000c8c <oled_simple_menu>:
	
}

void oled_simple_menu(){
	
	oled_pos(0,5);
     c8c:	65 e0       	ldi	r22, 0x05	; 5
     c8e:	70 e0       	ldi	r23, 0x00	; 0
     c90:	80 e0       	ldi	r24, 0x00	; 0
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	oled_print("MENU");
     c98:	83 ef       	ldi	r24, 0xF3	; 243
     c9a:	91 e0       	ldi	r25, 0x01	; 1
     c9c:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <oled_print>
	oled_pos(1,5);
     ca0:	65 e0       	ldi	r22, 0x05	; 5
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	oled_print("START GAME");
     cac:	85 eb       	ldi	r24, 0xB5	; 181
     cae:	91 e0       	ldi	r25, 0x01	; 1
     cb0:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <oled_print>
	oled_pos(2,5);
     cb4:	65 e0       	ldi	r22, 0x05	; 5
     cb6:	70 e0       	ldi	r23, 0x00	; 0
     cb8:	82 e0       	ldi	r24, 0x02	; 2
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	oled_print("DIFF 1");
     cc0:	86 ec       	ldi	r24, 0xC6	; 198
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <oled_print>
	oled_pos(3,5);
     cc8:	65 e0       	ldi	r22, 0x05	; 5
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	83 e0       	ldi	r24, 0x03	; 3
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	oled_print("DIFF 2");
     cd4:	8d ec       	ldi	r24, 0xCD	; 205
     cd6:	91 e0       	ldi	r25, 0x01	; 1
     cd8:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <oled_print>
	oled_pos(4,5);
     cdc:	65 e0       	ldi	r22, 0x05	; 5
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	84 e0       	ldi	r24, 0x04	; 4
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	oled_print("DIFF 3");
     ce8:	84 ed       	ldi	r24, 0xD4	; 212
     cea:	91 e0       	ldi	r25, 0x01	; 1
     cec:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <oled_print>
	oled_pos(5,5);
     cf0:	65 e0       	ldi	r22, 0x05	; 5
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	85 e0       	ldi	r24, 0x05	; 5
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	oled_print("HIGHSCORES");
     cfc:	8b ed       	ldi	r24, 0xDB	; 219
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <oled_print>
     d04:	08 95       	ret

00000d06 <oled_highscores>:
}

int highscore[] = {5, 6, 8, 2, 1};
	//ex, add highscore sort?
	
void oled_highscores(){
     d06:	cf 93       	push	r28
     d08:	df 93       	push	r29
	oled_clear();
     d0a:	0e 94 ac 05 	call	0xb58	; 0xb58 <oled_clear>
	oled_pos(0,0);
     d0e:	60 e0       	ldi	r22, 0x00	; 0
     d10:	70 e0       	ldi	r23, 0x00	; 0
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	
	for( int i = 0; i < 6; i++){
     d1a:	c0 e0       	ldi	r28, 0x00	; 0
     d1c:	d0 e0       	ldi	r29, 0x00	; 0
     d1e:	0a c0       	rjmp	.+20     	; 0xd34 <oled_highscores+0x2e>
		oled_pos(i,5);
     d20:	65 e0       	ldi	r22, 0x05	; 5
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	ce 01       	movw	r24, r28
     d26:	0e 94 cf 05 	call	0xb9e	; 0xb9e <oled_pos>
	
		oled_print("%d trym");
     d2a:	86 ee       	ldi	r24, 0xE6	; 230
     d2c:	91 e0       	ldi	r25, 0x01	; 1
     d2e:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <oled_print>
	
void oled_highscores(){
	oled_clear();
	oled_pos(0,0);
	
	for( int i = 0; i < 6; i++){
     d32:	21 96       	adiw	r28, 0x01	; 1
     d34:	c6 30       	cpi	r28, 0x06	; 6
     d36:	d1 05       	cpc	r29, r1
     d38:	9c f3       	brlt	.-26     	; 0xd20 <oled_highscores+0x1a>
		
		
	}
	
	
}
     d3a:	df 91       	pop	r29
     d3c:	cf 91       	pop	r28
     d3e:	08 95       	ret

00000d40 <spi_write>:
	SPCR = (1<<SPE);
}

void spi_write(char cData) {
	// Start transmission
	SPDR = cData;
     d40:	8f b9       	out	0x0f, r24	; 15
	// Wait for transmission complete
	while(!(SPSR & (1<<SPIF))) {
     d42:	77 9b       	sbis	0x0e, 7	; 14
     d44:	fe cf       	rjmp	.-4      	; 0xd42 <spi_write+0x2>
	}
}
     d46:	08 95       	ret

00000d48 <spi_read>:

uint8_t spi_read() {
	SPDR = 0xFF; //0x00
     d48:	8f ef       	ldi	r24, 0xFF	; 255
     d4a:	8f b9       	out	0x0f, r24	; 15
	// Wait for reception complete
	while(!(SPSR & (1<<SPIF))) {
     d4c:	77 9b       	sbis	0x0e, 7	; 14
     d4e:	fe cf       	rjmp	.-4      	; 0xd4c <spi_read+0x4>
	}
	// Return data register
	return SPDR;
     d50:	8f b1       	in	r24, 0x0f	; 15
	

}
     d52:	08 95       	ret

00000d54 <spi_set_ss>:

void spi_set_ss() {
	PORTB |= (1 << DD_SS);
     d54:	88 b3       	in	r24, 0x18	; 24
     d56:	80 61       	ori	r24, 0x10	; 16
     d58:	88 bb       	out	0x18, r24	; 24
     d5a:	08 95       	ret

00000d5c <spi_master_init>:
#define DD_MISO PB6
#define DD_SCK PB7

void spi_master_init() {
	// Set MOSI and SCK - og chipS(ss) - output, all others input
	DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)|(1<<DD_SS);
     d5c:	80 eb       	ldi	r24, 0xB0	; 176
     d5e:	87 bb       	out	0x17, r24	; 23
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0)|(1<<SPIE);
     d60:	81 ed       	ldi	r24, 0xD1	; 209
     d62:	8d b9       	out	0x0d, r24	; 13
	spi_set_ss();
     d64:	0e 94 aa 06 	call	0xd54	; 0xd54 <spi_set_ss>
     d68:	08 95       	ret

00000d6a <spi_clear_ss>:
	PORTB |= (1 << DD_SS);
	//(PORTB |= (1 << DD_SS));
}

void spi_clear_ss() {
	PORTB &= ~(1 << DD_SS);
     d6a:	88 b3       	in	r24, 0x18	; 24
     d6c:	8f 7e       	andi	r24, 0xEF	; 239
     d6e:	88 bb       	out	0x18, r24	; 24
     d70:	08 95       	ret

00000d72 <SRAM_init>:
     d72:	85 b7       	in	r24, 0x35	; 53
     d74:	80 68       	ori	r24, 0x80	; 128
     d76:	85 bf       	out	0x35, r24	; 53
     d78:	80 b7       	in	r24, 0x30	; 48
     d7a:	80 62       	ori	r24, 0x20	; 32
     d7c:	80 bf       	out	0x30, r24	; 48
     d7e:	08 95       	ret

00000d80 <UART_Transmitt>:
     d80:	5d 9b       	sbis	0x0b, 5	; 11
     d82:	fe cf       	rjmp	.-4      	; 0xd80 <UART_Transmitt>
     d84:	8c b9       	out	0x0c, r24	; 12
     d86:	08 95       	ret

00000d88 <UART_Receive>:
     d88:	5f 99       	sbic	0x0b, 7	; 11
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <UART_Receive+0x8>
     d8c:	8c b1       	in	r24, 0x0c	; 12
     d8e:	08 95       	ret
     d90:	08 95       	ret

00000d92 <UART_init>:
     d92:	90 bd       	out	0x20, r25	; 32
     d94:	89 b9       	out	0x09, r24	; 9
     d96:	88 e1       	ldi	r24, 0x18	; 24
     d98:	8a b9       	out	0x0a, r24	; 10
     d9a:	8e e8       	ldi	r24, 0x8E	; 142
     d9c:	80 bd       	out	0x20, r24	; 32
     d9e:	64 ec       	ldi	r22, 0xC4	; 196
     da0:	76 e0       	ldi	r23, 0x06	; 6
     da2:	80 ec       	ldi	r24, 0xC0	; 192
     da4:	96 e0       	ldi	r25, 0x06	; 6
     da6:	0e 94 1f 08 	call	0x103e	; 0x103e <fdevopen>
     daa:	08 95       	ret

00000dac <__divmodhi4>:
     dac:	97 fb       	bst	r25, 7
     dae:	07 2e       	mov	r0, r23
     db0:	16 f4       	brtc	.+4      	; 0xdb6 <__divmodhi4+0xa>
     db2:	00 94       	com	r0
     db4:	07 d0       	rcall	.+14     	; 0xdc4 <__divmodhi4_neg1>
     db6:	77 fd       	sbrc	r23, 7
     db8:	09 d0       	rcall	.+18     	; 0xdcc <__divmodhi4_neg2>
     dba:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__udivmodhi4>
     dbe:	07 fc       	sbrc	r0, 7
     dc0:	05 d0       	rcall	.+10     	; 0xdcc <__divmodhi4_neg2>
     dc2:	3e f4       	brtc	.+14     	; 0xdd2 <__divmodhi4_exit>

00000dc4 <__divmodhi4_neg1>:
     dc4:	90 95       	com	r25
     dc6:	81 95       	neg	r24
     dc8:	9f 4f       	sbci	r25, 0xFF	; 255
     dca:	08 95       	ret

00000dcc <__divmodhi4_neg2>:
     dcc:	70 95       	com	r23
     dce:	61 95       	neg	r22
     dd0:	7f 4f       	sbci	r23, 0xFF	; 255

00000dd2 <__divmodhi4_exit>:
     dd2:	08 95       	ret

00000dd4 <__udivmodhi4>:
     dd4:	aa 1b       	sub	r26, r26
     dd6:	bb 1b       	sub	r27, r27
     dd8:	51 e1       	ldi	r21, 0x11	; 17
     dda:	07 c0       	rjmp	.+14     	; 0xdea <__udivmodhi4_ep>

00000ddc <__udivmodhi4_loop>:
     ddc:	aa 1f       	adc	r26, r26
     dde:	bb 1f       	adc	r27, r27
     de0:	a6 17       	cp	r26, r22
     de2:	b7 07       	cpc	r27, r23
     de4:	10 f0       	brcs	.+4      	; 0xdea <__udivmodhi4_ep>
     de6:	a6 1b       	sub	r26, r22
     de8:	b7 0b       	sbc	r27, r23

00000dea <__udivmodhi4_ep>:
     dea:	88 1f       	adc	r24, r24
     dec:	99 1f       	adc	r25, r25
     dee:	5a 95       	dec	r21
     df0:	a9 f7       	brne	.-22     	; 0xddc <__udivmodhi4_loop>
     df2:	80 95       	com	r24
     df4:	90 95       	com	r25
     df6:	bc 01       	movw	r22, r24
     df8:	cd 01       	movw	r24, r26
     dfa:	08 95       	ret

00000dfc <malloc>:
     dfc:	0f 93       	push	r16
     dfe:	1f 93       	push	r17
     e00:	cf 93       	push	r28
     e02:	df 93       	push	r29
     e04:	82 30       	cpi	r24, 0x02	; 2
     e06:	91 05       	cpc	r25, r1
     e08:	10 f4       	brcc	.+4      	; 0xe0e <malloc+0x12>
     e0a:	82 e0       	ldi	r24, 0x02	; 2
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <__flp>
     e12:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <__flp+0x1>
     e16:	20 e0       	ldi	r18, 0x00	; 0
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	a0 e0       	ldi	r26, 0x00	; 0
     e1c:	b0 e0       	ldi	r27, 0x00	; 0
     e1e:	30 97       	sbiw	r30, 0x00	; 0
     e20:	19 f1       	breq	.+70     	; 0xe68 <malloc+0x6c>
     e22:	40 81       	ld	r20, Z
     e24:	51 81       	ldd	r21, Z+1	; 0x01
     e26:	02 81       	ldd	r16, Z+2	; 0x02
     e28:	13 81       	ldd	r17, Z+3	; 0x03
     e2a:	48 17       	cp	r20, r24
     e2c:	59 07       	cpc	r21, r25
     e2e:	c8 f0       	brcs	.+50     	; 0xe62 <malloc+0x66>
     e30:	84 17       	cp	r24, r20
     e32:	95 07       	cpc	r25, r21
     e34:	69 f4       	brne	.+26     	; 0xe50 <malloc+0x54>
     e36:	10 97       	sbiw	r26, 0x00	; 0
     e38:	31 f0       	breq	.+12     	; 0xe46 <malloc+0x4a>
     e3a:	12 96       	adiw	r26, 0x02	; 2
     e3c:	0c 93       	st	X, r16
     e3e:	12 97       	sbiw	r26, 0x02	; 2
     e40:	13 96       	adiw	r26, 0x03	; 3
     e42:	1c 93       	st	X, r17
     e44:	27 c0       	rjmp	.+78     	; 0xe94 <malloc+0x98>
     e46:	00 93 fe 01 	sts	0x01FE, r16	; 0x8001fe <__flp>
     e4a:	10 93 ff 01 	sts	0x01FF, r17	; 0x8001ff <__flp+0x1>
     e4e:	22 c0       	rjmp	.+68     	; 0xe94 <malloc+0x98>
     e50:	21 15       	cp	r18, r1
     e52:	31 05       	cpc	r19, r1
     e54:	19 f0       	breq	.+6      	; 0xe5c <malloc+0x60>
     e56:	42 17       	cp	r20, r18
     e58:	53 07       	cpc	r21, r19
     e5a:	18 f4       	brcc	.+6      	; 0xe62 <malloc+0x66>
     e5c:	9a 01       	movw	r18, r20
     e5e:	bd 01       	movw	r22, r26
     e60:	ef 01       	movw	r28, r30
     e62:	df 01       	movw	r26, r30
     e64:	f8 01       	movw	r30, r16
     e66:	db cf       	rjmp	.-74     	; 0xe1e <malloc+0x22>
     e68:	21 15       	cp	r18, r1
     e6a:	31 05       	cpc	r19, r1
     e6c:	f9 f0       	breq	.+62     	; 0xeac <malloc+0xb0>
     e6e:	28 1b       	sub	r18, r24
     e70:	39 0b       	sbc	r19, r25
     e72:	24 30       	cpi	r18, 0x04	; 4
     e74:	31 05       	cpc	r19, r1
     e76:	80 f4       	brcc	.+32     	; 0xe98 <malloc+0x9c>
     e78:	8a 81       	ldd	r24, Y+2	; 0x02
     e7a:	9b 81       	ldd	r25, Y+3	; 0x03
     e7c:	61 15       	cp	r22, r1
     e7e:	71 05       	cpc	r23, r1
     e80:	21 f0       	breq	.+8      	; 0xe8a <malloc+0x8e>
     e82:	fb 01       	movw	r30, r22
     e84:	93 83       	std	Z+3, r25	; 0x03
     e86:	82 83       	std	Z+2, r24	; 0x02
     e88:	04 c0       	rjmp	.+8      	; 0xe92 <malloc+0x96>
     e8a:	90 93 ff 01 	sts	0x01FF, r25	; 0x8001ff <__flp+0x1>
     e8e:	80 93 fe 01 	sts	0x01FE, r24	; 0x8001fe <__flp>
     e92:	fe 01       	movw	r30, r28
     e94:	32 96       	adiw	r30, 0x02	; 2
     e96:	44 c0       	rjmp	.+136    	; 0xf20 <malloc+0x124>
     e98:	fe 01       	movw	r30, r28
     e9a:	e2 0f       	add	r30, r18
     e9c:	f3 1f       	adc	r31, r19
     e9e:	81 93       	st	Z+, r24
     ea0:	91 93       	st	Z+, r25
     ea2:	22 50       	subi	r18, 0x02	; 2
     ea4:	31 09       	sbc	r19, r1
     ea6:	39 83       	std	Y+1, r19	; 0x01
     ea8:	28 83       	st	Y, r18
     eaa:	3a c0       	rjmp	.+116    	; 0xf20 <malloc+0x124>
     eac:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <__brkval>
     eb0:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <__brkval+0x1>
     eb4:	23 2b       	or	r18, r19
     eb6:	41 f4       	brne	.+16     	; 0xec8 <malloc+0xcc>
     eb8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     ebc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     ec0:	30 93 fd 01 	sts	0x01FD, r19	; 0x8001fd <__brkval+0x1>
     ec4:	20 93 fc 01 	sts	0x01FC, r18	; 0x8001fc <__brkval>
     ec8:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ecc:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ed0:	21 15       	cp	r18, r1
     ed2:	31 05       	cpc	r19, r1
     ed4:	41 f4       	brne	.+16     	; 0xee6 <malloc+0xea>
     ed6:	2d b7       	in	r18, 0x3d	; 61
     ed8:	3e b7       	in	r19, 0x3e	; 62
     eda:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     ede:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     ee2:	24 1b       	sub	r18, r20
     ee4:	35 0b       	sbc	r19, r21
     ee6:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <__brkval>
     eea:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <__brkval+0x1>
     eee:	e2 17       	cp	r30, r18
     ef0:	f3 07       	cpc	r31, r19
     ef2:	a0 f4       	brcc	.+40     	; 0xf1c <malloc+0x120>
     ef4:	2e 1b       	sub	r18, r30
     ef6:	3f 0b       	sbc	r19, r31
     ef8:	28 17       	cp	r18, r24
     efa:	39 07       	cpc	r19, r25
     efc:	78 f0       	brcs	.+30     	; 0xf1c <malloc+0x120>
     efe:	ac 01       	movw	r20, r24
     f00:	4e 5f       	subi	r20, 0xFE	; 254
     f02:	5f 4f       	sbci	r21, 0xFF	; 255
     f04:	24 17       	cp	r18, r20
     f06:	35 07       	cpc	r19, r21
     f08:	48 f0       	brcs	.+18     	; 0xf1c <malloc+0x120>
     f0a:	4e 0f       	add	r20, r30
     f0c:	5f 1f       	adc	r21, r31
     f0e:	50 93 fd 01 	sts	0x01FD, r21	; 0x8001fd <__brkval+0x1>
     f12:	40 93 fc 01 	sts	0x01FC, r20	; 0x8001fc <__brkval>
     f16:	81 93       	st	Z+, r24
     f18:	91 93       	st	Z+, r25
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <malloc+0x124>
     f1c:	e0 e0       	ldi	r30, 0x00	; 0
     f1e:	f0 e0       	ldi	r31, 0x00	; 0
     f20:	cf 01       	movw	r24, r30
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	1f 91       	pop	r17
     f28:	0f 91       	pop	r16
     f2a:	08 95       	ret

00000f2c <free>:
     f2c:	cf 93       	push	r28
     f2e:	df 93       	push	r29
     f30:	00 97       	sbiw	r24, 0x00	; 0
     f32:	09 f4       	brne	.+2      	; 0xf36 <free+0xa>
     f34:	81 c0       	rjmp	.+258    	; 0x1038 <free+0x10c>
     f36:	fc 01       	movw	r30, r24
     f38:	32 97       	sbiw	r30, 0x02	; 2
     f3a:	13 82       	std	Z+3, r1	; 0x03
     f3c:	12 82       	std	Z+2, r1	; 0x02
     f3e:	a0 91 fe 01 	lds	r26, 0x01FE	; 0x8001fe <__flp>
     f42:	b0 91 ff 01 	lds	r27, 0x01FF	; 0x8001ff <__flp+0x1>
     f46:	10 97       	sbiw	r26, 0x00	; 0
     f48:	81 f4       	brne	.+32     	; 0xf6a <free+0x3e>
     f4a:	20 81       	ld	r18, Z
     f4c:	31 81       	ldd	r19, Z+1	; 0x01
     f4e:	82 0f       	add	r24, r18
     f50:	93 1f       	adc	r25, r19
     f52:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <__brkval>
     f56:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <__brkval+0x1>
     f5a:	28 17       	cp	r18, r24
     f5c:	39 07       	cpc	r19, r25
     f5e:	51 f5       	brne	.+84     	; 0xfb4 <free+0x88>
     f60:	f0 93 fd 01 	sts	0x01FD, r31	; 0x8001fd <__brkval+0x1>
     f64:	e0 93 fc 01 	sts	0x01FC, r30	; 0x8001fc <__brkval>
     f68:	67 c0       	rjmp	.+206    	; 0x1038 <free+0x10c>
     f6a:	ed 01       	movw	r28, r26
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	ce 17       	cp	r28, r30
     f72:	df 07       	cpc	r29, r31
     f74:	40 f4       	brcc	.+16     	; 0xf86 <free+0x5a>
     f76:	4a 81       	ldd	r20, Y+2	; 0x02
     f78:	5b 81       	ldd	r21, Y+3	; 0x03
     f7a:	9e 01       	movw	r18, r28
     f7c:	41 15       	cp	r20, r1
     f7e:	51 05       	cpc	r21, r1
     f80:	f1 f0       	breq	.+60     	; 0xfbe <free+0x92>
     f82:	ea 01       	movw	r28, r20
     f84:	f5 cf       	rjmp	.-22     	; 0xf70 <free+0x44>
     f86:	d3 83       	std	Z+3, r29	; 0x03
     f88:	c2 83       	std	Z+2, r28	; 0x02
     f8a:	40 81       	ld	r20, Z
     f8c:	51 81       	ldd	r21, Z+1	; 0x01
     f8e:	84 0f       	add	r24, r20
     f90:	95 1f       	adc	r25, r21
     f92:	c8 17       	cp	r28, r24
     f94:	d9 07       	cpc	r29, r25
     f96:	59 f4       	brne	.+22     	; 0xfae <free+0x82>
     f98:	88 81       	ld	r24, Y
     f9a:	99 81       	ldd	r25, Y+1	; 0x01
     f9c:	84 0f       	add	r24, r20
     f9e:	95 1f       	adc	r25, r21
     fa0:	02 96       	adiw	r24, 0x02	; 2
     fa2:	91 83       	std	Z+1, r25	; 0x01
     fa4:	80 83       	st	Z, r24
     fa6:	8a 81       	ldd	r24, Y+2	; 0x02
     fa8:	9b 81       	ldd	r25, Y+3	; 0x03
     faa:	93 83       	std	Z+3, r25	; 0x03
     fac:	82 83       	std	Z+2, r24	; 0x02
     fae:	21 15       	cp	r18, r1
     fb0:	31 05       	cpc	r19, r1
     fb2:	29 f4       	brne	.+10     	; 0xfbe <free+0x92>
     fb4:	f0 93 ff 01 	sts	0x01FF, r31	; 0x8001ff <__flp+0x1>
     fb8:	e0 93 fe 01 	sts	0x01FE, r30	; 0x8001fe <__flp>
     fbc:	3d c0       	rjmp	.+122    	; 0x1038 <free+0x10c>
     fbe:	e9 01       	movw	r28, r18
     fc0:	fb 83       	std	Y+3, r31	; 0x03
     fc2:	ea 83       	std	Y+2, r30	; 0x02
     fc4:	49 91       	ld	r20, Y+
     fc6:	59 91       	ld	r21, Y+
     fc8:	c4 0f       	add	r28, r20
     fca:	d5 1f       	adc	r29, r21
     fcc:	ec 17       	cp	r30, r28
     fce:	fd 07       	cpc	r31, r29
     fd0:	61 f4       	brne	.+24     	; 0xfea <free+0xbe>
     fd2:	80 81       	ld	r24, Z
     fd4:	91 81       	ldd	r25, Z+1	; 0x01
     fd6:	84 0f       	add	r24, r20
     fd8:	95 1f       	adc	r25, r21
     fda:	02 96       	adiw	r24, 0x02	; 2
     fdc:	e9 01       	movw	r28, r18
     fde:	99 83       	std	Y+1, r25	; 0x01
     fe0:	88 83       	st	Y, r24
     fe2:	82 81       	ldd	r24, Z+2	; 0x02
     fe4:	93 81       	ldd	r25, Z+3	; 0x03
     fe6:	9b 83       	std	Y+3, r25	; 0x03
     fe8:	8a 83       	std	Y+2, r24	; 0x02
     fea:	e0 e0       	ldi	r30, 0x00	; 0
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	12 96       	adiw	r26, 0x02	; 2
     ff0:	8d 91       	ld	r24, X+
     ff2:	9c 91       	ld	r25, X
     ff4:	13 97       	sbiw	r26, 0x03	; 3
     ff6:	00 97       	sbiw	r24, 0x00	; 0
     ff8:	19 f0       	breq	.+6      	; 0x1000 <free+0xd4>
     ffa:	fd 01       	movw	r30, r26
     ffc:	dc 01       	movw	r26, r24
     ffe:	f7 cf       	rjmp	.-18     	; 0xfee <free+0xc2>
    1000:	8d 91       	ld	r24, X+
    1002:	9c 91       	ld	r25, X
    1004:	11 97       	sbiw	r26, 0x01	; 1
    1006:	9d 01       	movw	r18, r26
    1008:	2e 5f       	subi	r18, 0xFE	; 254
    100a:	3f 4f       	sbci	r19, 0xFF	; 255
    100c:	82 0f       	add	r24, r18
    100e:	93 1f       	adc	r25, r19
    1010:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <__brkval>
    1014:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <__brkval+0x1>
    1018:	28 17       	cp	r18, r24
    101a:	39 07       	cpc	r19, r25
    101c:	69 f4       	brne	.+26     	; 0x1038 <free+0x10c>
    101e:	30 97       	sbiw	r30, 0x00	; 0
    1020:	29 f4       	brne	.+10     	; 0x102c <free+0x100>
    1022:	10 92 ff 01 	sts	0x01FF, r1	; 0x8001ff <__flp+0x1>
    1026:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <__flp>
    102a:	02 c0       	rjmp	.+4      	; 0x1030 <free+0x104>
    102c:	13 82       	std	Z+3, r1	; 0x03
    102e:	12 82       	std	Z+2, r1	; 0x02
    1030:	b0 93 fd 01 	sts	0x01FD, r27	; 0x8001fd <__brkval+0x1>
    1034:	a0 93 fc 01 	sts	0x01FC, r26	; 0x8001fc <__brkval>
    1038:	df 91       	pop	r29
    103a:	cf 91       	pop	r28
    103c:	08 95       	ret

0000103e <fdevopen>:
    103e:	0f 93       	push	r16
    1040:	1f 93       	push	r17
    1042:	cf 93       	push	r28
    1044:	df 93       	push	r29
    1046:	00 97       	sbiw	r24, 0x00	; 0
    1048:	31 f4       	brne	.+12     	; 0x1056 <fdevopen+0x18>
    104a:	61 15       	cp	r22, r1
    104c:	71 05       	cpc	r23, r1
    104e:	19 f4       	brne	.+6      	; 0x1056 <fdevopen+0x18>
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	3a c0       	rjmp	.+116    	; 0x10ca <fdevopen+0x8c>
    1056:	8b 01       	movw	r16, r22
    1058:	ec 01       	movw	r28, r24
    105a:	6e e0       	ldi	r22, 0x0E	; 14
    105c:	70 e0       	ldi	r23, 0x00	; 0
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 91 0a 	call	0x1522	; 0x1522 <calloc>
    1066:	fc 01       	movw	r30, r24
    1068:	89 2b       	or	r24, r25
    106a:	91 f3       	breq	.-28     	; 0x1050 <fdevopen+0x12>
    106c:	80 e8       	ldi	r24, 0x80	; 128
    106e:	83 83       	std	Z+3, r24	; 0x03
    1070:	01 15       	cp	r16, r1
    1072:	11 05       	cpc	r17, r1
    1074:	71 f0       	breq	.+28     	; 0x1092 <fdevopen+0x54>
    1076:	13 87       	std	Z+11, r17	; 0x0b
    1078:	02 87       	std	Z+10, r16	; 0x0a
    107a:	81 e8       	ldi	r24, 0x81	; 129
    107c:	83 83       	std	Z+3, r24	; 0x03
    107e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__iob>
    1082:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__iob+0x1>
    1086:	89 2b       	or	r24, r25
    1088:	21 f4       	brne	.+8      	; 0x1092 <fdevopen+0x54>
    108a:	f0 93 01 02 	sts	0x0201, r31	; 0x800201 <__iob+0x1>
    108e:	e0 93 00 02 	sts	0x0200, r30	; 0x800200 <__iob>
    1092:	20 97       	sbiw	r28, 0x00	; 0
    1094:	c9 f0       	breq	.+50     	; 0x10c8 <fdevopen+0x8a>
    1096:	d1 87       	std	Z+9, r29	; 0x09
    1098:	c0 87       	std	Z+8, r28	; 0x08
    109a:	83 81       	ldd	r24, Z+3	; 0x03
    109c:	82 60       	ori	r24, 0x02	; 2
    109e:	83 83       	std	Z+3, r24	; 0x03
    10a0:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__iob+0x2>
    10a4:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__iob+0x3>
    10a8:	89 2b       	or	r24, r25
    10aa:	71 f4       	brne	.+28     	; 0x10c8 <fdevopen+0x8a>
    10ac:	f0 93 03 02 	sts	0x0203, r31	; 0x800203 <__iob+0x3>
    10b0:	e0 93 02 02 	sts	0x0202, r30	; 0x800202 <__iob+0x2>
    10b4:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <__iob+0x4>
    10b8:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <__iob+0x5>
    10bc:	89 2b       	or	r24, r25
    10be:	21 f4       	brne	.+8      	; 0x10c8 <fdevopen+0x8a>
    10c0:	f0 93 05 02 	sts	0x0205, r31	; 0x800205 <__iob+0x5>
    10c4:	e0 93 04 02 	sts	0x0204, r30	; 0x800204 <__iob+0x4>
    10c8:	cf 01       	movw	r24, r30
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	1f 91       	pop	r17
    10d0:	0f 91       	pop	r16
    10d2:	08 95       	ret

000010d4 <printf>:
    10d4:	a0 e0       	ldi	r26, 0x00	; 0
    10d6:	b0 e0       	ldi	r27, 0x00	; 0
    10d8:	e0 e7       	ldi	r30, 0x70	; 112
    10da:	f8 e0       	ldi	r31, 0x08	; 8
    10dc:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__prologue_saves__+0x20>
    10e0:	ae 01       	movw	r20, r28
    10e2:	4b 5f       	subi	r20, 0xFB	; 251
    10e4:	5f 4f       	sbci	r21, 0xFF	; 255
    10e6:	fa 01       	movw	r30, r20
    10e8:	61 91       	ld	r22, Z+
    10ea:	71 91       	ld	r23, Z+
    10ec:	af 01       	movw	r20, r30
    10ee:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__iob+0x2>
    10f2:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__iob+0x3>
    10f6:	0e 94 b0 08 	call	0x1160	; 0x1160 <vfprintf>
    10fa:	e2 e0       	ldi	r30, 0x02	; 2
    10fc:	0c 94 90 0b 	jmp	0x1720	; 0x1720 <__epilogue_restores__+0x20>

00001100 <puts>:
    1100:	0f 93       	push	r16
    1102:	1f 93       	push	r17
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <__iob+0x2>
    110c:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <__iob+0x3>
    1110:	23 81       	ldd	r18, Z+3	; 0x03
    1112:	21 ff       	sbrs	r18, 1
    1114:	1b c0       	rjmp	.+54     	; 0x114c <puts+0x4c>
    1116:	8c 01       	movw	r16, r24
    1118:	d0 e0       	ldi	r29, 0x00	; 0
    111a:	c0 e0       	ldi	r28, 0x00	; 0
    111c:	f8 01       	movw	r30, r16
    111e:	81 91       	ld	r24, Z+
    1120:	8f 01       	movw	r16, r30
    1122:	60 91 02 02 	lds	r22, 0x0202	; 0x800202 <__iob+0x2>
    1126:	70 91 03 02 	lds	r23, 0x0203	; 0x800203 <__iob+0x3>
    112a:	db 01       	movw	r26, r22
    112c:	18 96       	adiw	r26, 0x08	; 8
    112e:	ed 91       	ld	r30, X+
    1130:	fc 91       	ld	r31, X
    1132:	19 97       	sbiw	r26, 0x09	; 9
    1134:	88 23       	and	r24, r24
    1136:	31 f0       	breq	.+12     	; 0x1144 <puts+0x44>
    1138:	09 95       	icall
    113a:	89 2b       	or	r24, r25
    113c:	79 f3       	breq	.-34     	; 0x111c <puts+0x1c>
    113e:	df ef       	ldi	r29, 0xFF	; 255
    1140:	cf ef       	ldi	r28, 0xFF	; 255
    1142:	ec cf       	rjmp	.-40     	; 0x111c <puts+0x1c>
    1144:	8a e0       	ldi	r24, 0x0A	; 10
    1146:	09 95       	icall
    1148:	89 2b       	or	r24, r25
    114a:	19 f0       	breq	.+6      	; 0x1152 <puts+0x52>
    114c:	8f ef       	ldi	r24, 0xFF	; 255
    114e:	9f ef       	ldi	r25, 0xFF	; 255
    1150:	02 c0       	rjmp	.+4      	; 0x1156 <puts+0x56>
    1152:	8d 2f       	mov	r24, r29
    1154:	9c 2f       	mov	r25, r28
    1156:	df 91       	pop	r29
    1158:	cf 91       	pop	r28
    115a:	1f 91       	pop	r17
    115c:	0f 91       	pop	r16
    115e:	08 95       	ret

00001160 <vfprintf>:
    1160:	ab e0       	ldi	r26, 0x0B	; 11
    1162:	b0 e0       	ldi	r27, 0x00	; 0
    1164:	e6 eb       	ldi	r30, 0xB6	; 182
    1166:	f8 e0       	ldi	r31, 0x08	; 8
    1168:	0c 94 64 0b 	jmp	0x16c8	; 0x16c8 <__prologue_saves__>
    116c:	6c 01       	movw	r12, r24
    116e:	7b 01       	movw	r14, r22
    1170:	8a 01       	movw	r16, r20
    1172:	fc 01       	movw	r30, r24
    1174:	17 82       	std	Z+7, r1	; 0x07
    1176:	16 82       	std	Z+6, r1	; 0x06
    1178:	83 81       	ldd	r24, Z+3	; 0x03
    117a:	81 ff       	sbrs	r24, 1
    117c:	cc c1       	rjmp	.+920    	; 0x1516 <vfprintf+0x3b6>
    117e:	ce 01       	movw	r24, r28
    1180:	01 96       	adiw	r24, 0x01	; 1
    1182:	3c 01       	movw	r6, r24
    1184:	f6 01       	movw	r30, r12
    1186:	93 81       	ldd	r25, Z+3	; 0x03
    1188:	f7 01       	movw	r30, r14
    118a:	93 fd       	sbrc	r25, 3
    118c:	85 91       	lpm	r24, Z+
    118e:	93 ff       	sbrs	r25, 3
    1190:	81 91       	ld	r24, Z+
    1192:	7f 01       	movw	r14, r30
    1194:	88 23       	and	r24, r24
    1196:	09 f4       	brne	.+2      	; 0x119a <vfprintf+0x3a>
    1198:	ba c1       	rjmp	.+884    	; 0x150e <vfprintf+0x3ae>
    119a:	85 32       	cpi	r24, 0x25	; 37
    119c:	39 f4       	brne	.+14     	; 0x11ac <vfprintf+0x4c>
    119e:	93 fd       	sbrc	r25, 3
    11a0:	85 91       	lpm	r24, Z+
    11a2:	93 ff       	sbrs	r25, 3
    11a4:	81 91       	ld	r24, Z+
    11a6:	7f 01       	movw	r14, r30
    11a8:	85 32       	cpi	r24, 0x25	; 37
    11aa:	29 f4       	brne	.+10     	; 0x11b6 <vfprintf+0x56>
    11ac:	b6 01       	movw	r22, r12
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    11b4:	e7 cf       	rjmp	.-50     	; 0x1184 <vfprintf+0x24>
    11b6:	91 2c       	mov	r9, r1
    11b8:	21 2c       	mov	r2, r1
    11ba:	31 2c       	mov	r3, r1
    11bc:	ff e1       	ldi	r31, 0x1F	; 31
    11be:	f3 15       	cp	r31, r3
    11c0:	d8 f0       	brcs	.+54     	; 0x11f8 <vfprintf+0x98>
    11c2:	8b 32       	cpi	r24, 0x2B	; 43
    11c4:	79 f0       	breq	.+30     	; 0x11e4 <vfprintf+0x84>
    11c6:	38 f4       	brcc	.+14     	; 0x11d6 <vfprintf+0x76>
    11c8:	80 32       	cpi	r24, 0x20	; 32
    11ca:	79 f0       	breq	.+30     	; 0x11ea <vfprintf+0x8a>
    11cc:	83 32       	cpi	r24, 0x23	; 35
    11ce:	a1 f4       	brne	.+40     	; 0x11f8 <vfprintf+0x98>
    11d0:	23 2d       	mov	r18, r3
    11d2:	20 61       	ori	r18, 0x10	; 16
    11d4:	1d c0       	rjmp	.+58     	; 0x1210 <vfprintf+0xb0>
    11d6:	8d 32       	cpi	r24, 0x2D	; 45
    11d8:	61 f0       	breq	.+24     	; 0x11f2 <vfprintf+0x92>
    11da:	80 33       	cpi	r24, 0x30	; 48
    11dc:	69 f4       	brne	.+26     	; 0x11f8 <vfprintf+0x98>
    11de:	23 2d       	mov	r18, r3
    11e0:	21 60       	ori	r18, 0x01	; 1
    11e2:	16 c0       	rjmp	.+44     	; 0x1210 <vfprintf+0xb0>
    11e4:	83 2d       	mov	r24, r3
    11e6:	82 60       	ori	r24, 0x02	; 2
    11e8:	38 2e       	mov	r3, r24
    11ea:	e3 2d       	mov	r30, r3
    11ec:	e4 60       	ori	r30, 0x04	; 4
    11ee:	3e 2e       	mov	r3, r30
    11f0:	2a c0       	rjmp	.+84     	; 0x1246 <vfprintf+0xe6>
    11f2:	f3 2d       	mov	r31, r3
    11f4:	f8 60       	ori	r31, 0x08	; 8
    11f6:	1d c0       	rjmp	.+58     	; 0x1232 <vfprintf+0xd2>
    11f8:	37 fc       	sbrc	r3, 7
    11fa:	2d c0       	rjmp	.+90     	; 0x1256 <vfprintf+0xf6>
    11fc:	20 ed       	ldi	r18, 0xD0	; 208
    11fe:	28 0f       	add	r18, r24
    1200:	2a 30       	cpi	r18, 0x0A	; 10
    1202:	40 f0       	brcs	.+16     	; 0x1214 <vfprintf+0xb4>
    1204:	8e 32       	cpi	r24, 0x2E	; 46
    1206:	b9 f4       	brne	.+46     	; 0x1236 <vfprintf+0xd6>
    1208:	36 fc       	sbrc	r3, 6
    120a:	81 c1       	rjmp	.+770    	; 0x150e <vfprintf+0x3ae>
    120c:	23 2d       	mov	r18, r3
    120e:	20 64       	ori	r18, 0x40	; 64
    1210:	32 2e       	mov	r3, r18
    1212:	19 c0       	rjmp	.+50     	; 0x1246 <vfprintf+0xe6>
    1214:	36 fe       	sbrs	r3, 6
    1216:	06 c0       	rjmp	.+12     	; 0x1224 <vfprintf+0xc4>
    1218:	8a e0       	ldi	r24, 0x0A	; 10
    121a:	98 9e       	mul	r9, r24
    121c:	20 0d       	add	r18, r0
    121e:	11 24       	eor	r1, r1
    1220:	92 2e       	mov	r9, r18
    1222:	11 c0       	rjmp	.+34     	; 0x1246 <vfprintf+0xe6>
    1224:	ea e0       	ldi	r30, 0x0A	; 10
    1226:	2e 9e       	mul	r2, r30
    1228:	20 0d       	add	r18, r0
    122a:	11 24       	eor	r1, r1
    122c:	22 2e       	mov	r2, r18
    122e:	f3 2d       	mov	r31, r3
    1230:	f0 62       	ori	r31, 0x20	; 32
    1232:	3f 2e       	mov	r3, r31
    1234:	08 c0       	rjmp	.+16     	; 0x1246 <vfprintf+0xe6>
    1236:	8c 36       	cpi	r24, 0x6C	; 108
    1238:	21 f4       	brne	.+8      	; 0x1242 <vfprintf+0xe2>
    123a:	83 2d       	mov	r24, r3
    123c:	80 68       	ori	r24, 0x80	; 128
    123e:	38 2e       	mov	r3, r24
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <vfprintf+0xe6>
    1242:	88 36       	cpi	r24, 0x68	; 104
    1244:	41 f4       	brne	.+16     	; 0x1256 <vfprintf+0xf6>
    1246:	f7 01       	movw	r30, r14
    1248:	93 fd       	sbrc	r25, 3
    124a:	85 91       	lpm	r24, Z+
    124c:	93 ff       	sbrs	r25, 3
    124e:	81 91       	ld	r24, Z+
    1250:	7f 01       	movw	r14, r30
    1252:	81 11       	cpse	r24, r1
    1254:	b3 cf       	rjmp	.-154    	; 0x11bc <vfprintf+0x5c>
    1256:	98 2f       	mov	r25, r24
    1258:	9f 7d       	andi	r25, 0xDF	; 223
    125a:	95 54       	subi	r25, 0x45	; 69
    125c:	93 30       	cpi	r25, 0x03	; 3
    125e:	28 f4       	brcc	.+10     	; 0x126a <vfprintf+0x10a>
    1260:	0c 5f       	subi	r16, 0xFC	; 252
    1262:	1f 4f       	sbci	r17, 0xFF	; 255
    1264:	9f e3       	ldi	r25, 0x3F	; 63
    1266:	99 83       	std	Y+1, r25	; 0x01
    1268:	0d c0       	rjmp	.+26     	; 0x1284 <vfprintf+0x124>
    126a:	83 36       	cpi	r24, 0x63	; 99
    126c:	31 f0       	breq	.+12     	; 0x127a <vfprintf+0x11a>
    126e:	83 37       	cpi	r24, 0x73	; 115
    1270:	71 f0       	breq	.+28     	; 0x128e <vfprintf+0x12e>
    1272:	83 35       	cpi	r24, 0x53	; 83
    1274:	09 f0       	breq	.+2      	; 0x1278 <vfprintf+0x118>
    1276:	59 c0       	rjmp	.+178    	; 0x132a <vfprintf+0x1ca>
    1278:	21 c0       	rjmp	.+66     	; 0x12bc <vfprintf+0x15c>
    127a:	f8 01       	movw	r30, r16
    127c:	80 81       	ld	r24, Z
    127e:	89 83       	std	Y+1, r24	; 0x01
    1280:	0e 5f       	subi	r16, 0xFE	; 254
    1282:	1f 4f       	sbci	r17, 0xFF	; 255
    1284:	88 24       	eor	r8, r8
    1286:	83 94       	inc	r8
    1288:	91 2c       	mov	r9, r1
    128a:	53 01       	movw	r10, r6
    128c:	13 c0       	rjmp	.+38     	; 0x12b4 <vfprintf+0x154>
    128e:	28 01       	movw	r4, r16
    1290:	f2 e0       	ldi	r31, 0x02	; 2
    1292:	4f 0e       	add	r4, r31
    1294:	51 1c       	adc	r5, r1
    1296:	f8 01       	movw	r30, r16
    1298:	a0 80       	ld	r10, Z
    129a:	b1 80       	ldd	r11, Z+1	; 0x01
    129c:	36 fe       	sbrs	r3, 6
    129e:	03 c0       	rjmp	.+6      	; 0x12a6 <vfprintf+0x146>
    12a0:	69 2d       	mov	r22, r9
    12a2:	70 e0       	ldi	r23, 0x00	; 0
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <vfprintf+0x14a>
    12a6:	6f ef       	ldi	r22, 0xFF	; 255
    12a8:	7f ef       	ldi	r23, 0xFF	; 255
    12aa:	c5 01       	movw	r24, r10
    12ac:	0e 94 bf 0a 	call	0x157e	; 0x157e <strnlen>
    12b0:	4c 01       	movw	r8, r24
    12b2:	82 01       	movw	r16, r4
    12b4:	f3 2d       	mov	r31, r3
    12b6:	ff 77       	andi	r31, 0x7F	; 127
    12b8:	3f 2e       	mov	r3, r31
    12ba:	16 c0       	rjmp	.+44     	; 0x12e8 <vfprintf+0x188>
    12bc:	28 01       	movw	r4, r16
    12be:	22 e0       	ldi	r18, 0x02	; 2
    12c0:	42 0e       	add	r4, r18
    12c2:	51 1c       	adc	r5, r1
    12c4:	f8 01       	movw	r30, r16
    12c6:	a0 80       	ld	r10, Z
    12c8:	b1 80       	ldd	r11, Z+1	; 0x01
    12ca:	36 fe       	sbrs	r3, 6
    12cc:	03 c0       	rjmp	.+6      	; 0x12d4 <vfprintf+0x174>
    12ce:	69 2d       	mov	r22, r9
    12d0:	70 e0       	ldi	r23, 0x00	; 0
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <vfprintf+0x178>
    12d4:	6f ef       	ldi	r22, 0xFF	; 255
    12d6:	7f ef       	ldi	r23, 0xFF	; 255
    12d8:	c5 01       	movw	r24, r10
    12da:	0e 94 ad 0a 	call	0x155a	; 0x155a <strnlen_P>
    12de:	4c 01       	movw	r8, r24
    12e0:	f3 2d       	mov	r31, r3
    12e2:	f0 68       	ori	r31, 0x80	; 128
    12e4:	3f 2e       	mov	r3, r31
    12e6:	82 01       	movw	r16, r4
    12e8:	33 fc       	sbrc	r3, 3
    12ea:	1b c0       	rjmp	.+54     	; 0x1322 <vfprintf+0x1c2>
    12ec:	82 2d       	mov	r24, r2
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	88 16       	cp	r8, r24
    12f2:	99 06       	cpc	r9, r25
    12f4:	b0 f4       	brcc	.+44     	; 0x1322 <vfprintf+0x1c2>
    12f6:	b6 01       	movw	r22, r12
    12f8:	80 e2       	ldi	r24, 0x20	; 32
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    1300:	2a 94       	dec	r2
    1302:	f4 cf       	rjmp	.-24     	; 0x12ec <vfprintf+0x18c>
    1304:	f5 01       	movw	r30, r10
    1306:	37 fc       	sbrc	r3, 7
    1308:	85 91       	lpm	r24, Z+
    130a:	37 fe       	sbrs	r3, 7
    130c:	81 91       	ld	r24, Z+
    130e:	5f 01       	movw	r10, r30
    1310:	b6 01       	movw	r22, r12
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    1318:	21 10       	cpse	r2, r1
    131a:	2a 94       	dec	r2
    131c:	21 e0       	ldi	r18, 0x01	; 1
    131e:	82 1a       	sub	r8, r18
    1320:	91 08       	sbc	r9, r1
    1322:	81 14       	cp	r8, r1
    1324:	91 04       	cpc	r9, r1
    1326:	71 f7       	brne	.-36     	; 0x1304 <vfprintf+0x1a4>
    1328:	e8 c0       	rjmp	.+464    	; 0x14fa <vfprintf+0x39a>
    132a:	84 36       	cpi	r24, 0x64	; 100
    132c:	11 f0       	breq	.+4      	; 0x1332 <vfprintf+0x1d2>
    132e:	89 36       	cpi	r24, 0x69	; 105
    1330:	41 f5       	brne	.+80     	; 0x1382 <vfprintf+0x222>
    1332:	f8 01       	movw	r30, r16
    1334:	37 fe       	sbrs	r3, 7
    1336:	07 c0       	rjmp	.+14     	; 0x1346 <vfprintf+0x1e6>
    1338:	60 81       	ld	r22, Z
    133a:	71 81       	ldd	r23, Z+1	; 0x01
    133c:	82 81       	ldd	r24, Z+2	; 0x02
    133e:	93 81       	ldd	r25, Z+3	; 0x03
    1340:	0c 5f       	subi	r16, 0xFC	; 252
    1342:	1f 4f       	sbci	r17, 0xFF	; 255
    1344:	08 c0       	rjmp	.+16     	; 0x1356 <vfprintf+0x1f6>
    1346:	60 81       	ld	r22, Z
    1348:	71 81       	ldd	r23, Z+1	; 0x01
    134a:	07 2e       	mov	r0, r23
    134c:	00 0c       	add	r0, r0
    134e:	88 0b       	sbc	r24, r24
    1350:	99 0b       	sbc	r25, r25
    1352:	0e 5f       	subi	r16, 0xFE	; 254
    1354:	1f 4f       	sbci	r17, 0xFF	; 255
    1356:	f3 2d       	mov	r31, r3
    1358:	ff 76       	andi	r31, 0x6F	; 111
    135a:	3f 2e       	mov	r3, r31
    135c:	97 ff       	sbrs	r25, 7
    135e:	09 c0       	rjmp	.+18     	; 0x1372 <vfprintf+0x212>
    1360:	90 95       	com	r25
    1362:	80 95       	com	r24
    1364:	70 95       	com	r23
    1366:	61 95       	neg	r22
    1368:	7f 4f       	sbci	r23, 0xFF	; 255
    136a:	8f 4f       	sbci	r24, 0xFF	; 255
    136c:	9f 4f       	sbci	r25, 0xFF	; 255
    136e:	f0 68       	ori	r31, 0x80	; 128
    1370:	3f 2e       	mov	r3, r31
    1372:	2a e0       	ldi	r18, 0x0A	; 10
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	a3 01       	movw	r20, r6
    1378:	0e 94 06 0b 	call	0x160c	; 0x160c <__ultoa_invert>
    137c:	88 2e       	mov	r8, r24
    137e:	86 18       	sub	r8, r6
    1380:	45 c0       	rjmp	.+138    	; 0x140c <vfprintf+0x2ac>
    1382:	85 37       	cpi	r24, 0x75	; 117
    1384:	31 f4       	brne	.+12     	; 0x1392 <vfprintf+0x232>
    1386:	23 2d       	mov	r18, r3
    1388:	2f 7e       	andi	r18, 0xEF	; 239
    138a:	b2 2e       	mov	r11, r18
    138c:	2a e0       	ldi	r18, 0x0A	; 10
    138e:	30 e0       	ldi	r19, 0x00	; 0
    1390:	25 c0       	rjmp	.+74     	; 0x13dc <vfprintf+0x27c>
    1392:	93 2d       	mov	r25, r3
    1394:	99 7f       	andi	r25, 0xF9	; 249
    1396:	b9 2e       	mov	r11, r25
    1398:	8f 36       	cpi	r24, 0x6F	; 111
    139a:	c1 f0       	breq	.+48     	; 0x13cc <vfprintf+0x26c>
    139c:	18 f4       	brcc	.+6      	; 0x13a4 <vfprintf+0x244>
    139e:	88 35       	cpi	r24, 0x58	; 88
    13a0:	79 f0       	breq	.+30     	; 0x13c0 <vfprintf+0x260>
    13a2:	b5 c0       	rjmp	.+362    	; 0x150e <vfprintf+0x3ae>
    13a4:	80 37       	cpi	r24, 0x70	; 112
    13a6:	19 f0       	breq	.+6      	; 0x13ae <vfprintf+0x24e>
    13a8:	88 37       	cpi	r24, 0x78	; 120
    13aa:	21 f0       	breq	.+8      	; 0x13b4 <vfprintf+0x254>
    13ac:	b0 c0       	rjmp	.+352    	; 0x150e <vfprintf+0x3ae>
    13ae:	e9 2f       	mov	r30, r25
    13b0:	e0 61       	ori	r30, 0x10	; 16
    13b2:	be 2e       	mov	r11, r30
    13b4:	b4 fe       	sbrs	r11, 4
    13b6:	0d c0       	rjmp	.+26     	; 0x13d2 <vfprintf+0x272>
    13b8:	fb 2d       	mov	r31, r11
    13ba:	f4 60       	ori	r31, 0x04	; 4
    13bc:	bf 2e       	mov	r11, r31
    13be:	09 c0       	rjmp	.+18     	; 0x13d2 <vfprintf+0x272>
    13c0:	34 fe       	sbrs	r3, 4
    13c2:	0a c0       	rjmp	.+20     	; 0x13d8 <vfprintf+0x278>
    13c4:	29 2f       	mov	r18, r25
    13c6:	26 60       	ori	r18, 0x06	; 6
    13c8:	b2 2e       	mov	r11, r18
    13ca:	06 c0       	rjmp	.+12     	; 0x13d8 <vfprintf+0x278>
    13cc:	28 e0       	ldi	r18, 0x08	; 8
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	05 c0       	rjmp	.+10     	; 0x13dc <vfprintf+0x27c>
    13d2:	20 e1       	ldi	r18, 0x10	; 16
    13d4:	30 e0       	ldi	r19, 0x00	; 0
    13d6:	02 c0       	rjmp	.+4      	; 0x13dc <vfprintf+0x27c>
    13d8:	20 e1       	ldi	r18, 0x10	; 16
    13da:	32 e0       	ldi	r19, 0x02	; 2
    13dc:	f8 01       	movw	r30, r16
    13de:	b7 fe       	sbrs	r11, 7
    13e0:	07 c0       	rjmp	.+14     	; 0x13f0 <vfprintf+0x290>
    13e2:	60 81       	ld	r22, Z
    13e4:	71 81       	ldd	r23, Z+1	; 0x01
    13e6:	82 81       	ldd	r24, Z+2	; 0x02
    13e8:	93 81       	ldd	r25, Z+3	; 0x03
    13ea:	0c 5f       	subi	r16, 0xFC	; 252
    13ec:	1f 4f       	sbci	r17, 0xFF	; 255
    13ee:	06 c0       	rjmp	.+12     	; 0x13fc <vfprintf+0x29c>
    13f0:	60 81       	ld	r22, Z
    13f2:	71 81       	ldd	r23, Z+1	; 0x01
    13f4:	80 e0       	ldi	r24, 0x00	; 0
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	0e 5f       	subi	r16, 0xFE	; 254
    13fa:	1f 4f       	sbci	r17, 0xFF	; 255
    13fc:	a3 01       	movw	r20, r6
    13fe:	0e 94 06 0b 	call	0x160c	; 0x160c <__ultoa_invert>
    1402:	88 2e       	mov	r8, r24
    1404:	86 18       	sub	r8, r6
    1406:	fb 2d       	mov	r31, r11
    1408:	ff 77       	andi	r31, 0x7F	; 127
    140a:	3f 2e       	mov	r3, r31
    140c:	36 fe       	sbrs	r3, 6
    140e:	0d c0       	rjmp	.+26     	; 0x142a <vfprintf+0x2ca>
    1410:	23 2d       	mov	r18, r3
    1412:	2e 7f       	andi	r18, 0xFE	; 254
    1414:	a2 2e       	mov	r10, r18
    1416:	89 14       	cp	r8, r9
    1418:	58 f4       	brcc	.+22     	; 0x1430 <vfprintf+0x2d0>
    141a:	34 fe       	sbrs	r3, 4
    141c:	0b c0       	rjmp	.+22     	; 0x1434 <vfprintf+0x2d4>
    141e:	32 fc       	sbrc	r3, 2
    1420:	09 c0       	rjmp	.+18     	; 0x1434 <vfprintf+0x2d4>
    1422:	83 2d       	mov	r24, r3
    1424:	8e 7e       	andi	r24, 0xEE	; 238
    1426:	a8 2e       	mov	r10, r24
    1428:	05 c0       	rjmp	.+10     	; 0x1434 <vfprintf+0x2d4>
    142a:	b8 2c       	mov	r11, r8
    142c:	a3 2c       	mov	r10, r3
    142e:	03 c0       	rjmp	.+6      	; 0x1436 <vfprintf+0x2d6>
    1430:	b8 2c       	mov	r11, r8
    1432:	01 c0       	rjmp	.+2      	; 0x1436 <vfprintf+0x2d6>
    1434:	b9 2c       	mov	r11, r9
    1436:	a4 fe       	sbrs	r10, 4
    1438:	0f c0       	rjmp	.+30     	; 0x1458 <vfprintf+0x2f8>
    143a:	fe 01       	movw	r30, r28
    143c:	e8 0d       	add	r30, r8
    143e:	f1 1d       	adc	r31, r1
    1440:	80 81       	ld	r24, Z
    1442:	80 33       	cpi	r24, 0x30	; 48
    1444:	21 f4       	brne	.+8      	; 0x144e <vfprintf+0x2ee>
    1446:	9a 2d       	mov	r25, r10
    1448:	99 7e       	andi	r25, 0xE9	; 233
    144a:	a9 2e       	mov	r10, r25
    144c:	09 c0       	rjmp	.+18     	; 0x1460 <vfprintf+0x300>
    144e:	a2 fe       	sbrs	r10, 2
    1450:	06 c0       	rjmp	.+12     	; 0x145e <vfprintf+0x2fe>
    1452:	b3 94       	inc	r11
    1454:	b3 94       	inc	r11
    1456:	04 c0       	rjmp	.+8      	; 0x1460 <vfprintf+0x300>
    1458:	8a 2d       	mov	r24, r10
    145a:	86 78       	andi	r24, 0x86	; 134
    145c:	09 f0       	breq	.+2      	; 0x1460 <vfprintf+0x300>
    145e:	b3 94       	inc	r11
    1460:	a3 fc       	sbrc	r10, 3
    1462:	11 c0       	rjmp	.+34     	; 0x1486 <vfprintf+0x326>
    1464:	a0 fe       	sbrs	r10, 0
    1466:	06 c0       	rjmp	.+12     	; 0x1474 <vfprintf+0x314>
    1468:	b2 14       	cp	r11, r2
    146a:	88 f4       	brcc	.+34     	; 0x148e <vfprintf+0x32e>
    146c:	28 0c       	add	r2, r8
    146e:	92 2c       	mov	r9, r2
    1470:	9b 18       	sub	r9, r11
    1472:	0e c0       	rjmp	.+28     	; 0x1490 <vfprintf+0x330>
    1474:	b2 14       	cp	r11, r2
    1476:	60 f4       	brcc	.+24     	; 0x1490 <vfprintf+0x330>
    1478:	b6 01       	movw	r22, r12
    147a:	80 e2       	ldi	r24, 0x20	; 32
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    1482:	b3 94       	inc	r11
    1484:	f7 cf       	rjmp	.-18     	; 0x1474 <vfprintf+0x314>
    1486:	b2 14       	cp	r11, r2
    1488:	18 f4       	brcc	.+6      	; 0x1490 <vfprintf+0x330>
    148a:	2b 18       	sub	r2, r11
    148c:	02 c0       	rjmp	.+4      	; 0x1492 <vfprintf+0x332>
    148e:	98 2c       	mov	r9, r8
    1490:	21 2c       	mov	r2, r1
    1492:	a4 fe       	sbrs	r10, 4
    1494:	10 c0       	rjmp	.+32     	; 0x14b6 <vfprintf+0x356>
    1496:	b6 01       	movw	r22, r12
    1498:	80 e3       	ldi	r24, 0x30	; 48
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    14a0:	a2 fe       	sbrs	r10, 2
    14a2:	17 c0       	rjmp	.+46     	; 0x14d2 <vfprintf+0x372>
    14a4:	a1 fc       	sbrc	r10, 1
    14a6:	03 c0       	rjmp	.+6      	; 0x14ae <vfprintf+0x34e>
    14a8:	88 e7       	ldi	r24, 0x78	; 120
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	02 c0       	rjmp	.+4      	; 0x14b2 <vfprintf+0x352>
    14ae:	88 e5       	ldi	r24, 0x58	; 88
    14b0:	90 e0       	ldi	r25, 0x00	; 0
    14b2:	b6 01       	movw	r22, r12
    14b4:	0c c0       	rjmp	.+24     	; 0x14ce <vfprintf+0x36e>
    14b6:	8a 2d       	mov	r24, r10
    14b8:	86 78       	andi	r24, 0x86	; 134
    14ba:	59 f0       	breq	.+22     	; 0x14d2 <vfprintf+0x372>
    14bc:	a1 fe       	sbrs	r10, 1
    14be:	02 c0       	rjmp	.+4      	; 0x14c4 <vfprintf+0x364>
    14c0:	8b e2       	ldi	r24, 0x2B	; 43
    14c2:	01 c0       	rjmp	.+2      	; 0x14c6 <vfprintf+0x366>
    14c4:	80 e2       	ldi	r24, 0x20	; 32
    14c6:	a7 fc       	sbrc	r10, 7
    14c8:	8d e2       	ldi	r24, 0x2D	; 45
    14ca:	b6 01       	movw	r22, r12
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    14d2:	89 14       	cp	r8, r9
    14d4:	38 f4       	brcc	.+14     	; 0x14e4 <vfprintf+0x384>
    14d6:	b6 01       	movw	r22, r12
    14d8:	80 e3       	ldi	r24, 0x30	; 48
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    14e0:	9a 94       	dec	r9
    14e2:	f7 cf       	rjmp	.-18     	; 0x14d2 <vfprintf+0x372>
    14e4:	8a 94       	dec	r8
    14e6:	f3 01       	movw	r30, r6
    14e8:	e8 0d       	add	r30, r8
    14ea:	f1 1d       	adc	r31, r1
    14ec:	80 81       	ld	r24, Z
    14ee:	b6 01       	movw	r22, r12
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    14f6:	81 10       	cpse	r8, r1
    14f8:	f5 cf       	rjmp	.-22     	; 0x14e4 <vfprintf+0x384>
    14fa:	22 20       	and	r2, r2
    14fc:	09 f4       	brne	.+2      	; 0x1500 <vfprintf+0x3a0>
    14fe:	42 ce       	rjmp	.-892    	; 0x1184 <vfprintf+0x24>
    1500:	b6 01       	movw	r22, r12
    1502:	80 e2       	ldi	r24, 0x20	; 32
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	0e 94 ca 0a 	call	0x1594	; 0x1594 <fputc>
    150a:	2a 94       	dec	r2
    150c:	f6 cf       	rjmp	.-20     	; 0x14fa <vfprintf+0x39a>
    150e:	f6 01       	movw	r30, r12
    1510:	86 81       	ldd	r24, Z+6	; 0x06
    1512:	97 81       	ldd	r25, Z+7	; 0x07
    1514:	02 c0       	rjmp	.+4      	; 0x151a <vfprintf+0x3ba>
    1516:	8f ef       	ldi	r24, 0xFF	; 255
    1518:	9f ef       	ldi	r25, 0xFF	; 255
    151a:	2b 96       	adiw	r28, 0x0b	; 11
    151c:	e2 e1       	ldi	r30, 0x12	; 18
    151e:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__epilogue_restores__>

00001522 <calloc>:
    1522:	0f 93       	push	r16
    1524:	1f 93       	push	r17
    1526:	cf 93       	push	r28
    1528:	df 93       	push	r29
    152a:	86 9f       	mul	r24, r22
    152c:	80 01       	movw	r16, r0
    152e:	87 9f       	mul	r24, r23
    1530:	10 0d       	add	r17, r0
    1532:	96 9f       	mul	r25, r22
    1534:	10 0d       	add	r17, r0
    1536:	11 24       	eor	r1, r1
    1538:	c8 01       	movw	r24, r16
    153a:	0e 94 fe 06 	call	0xdfc	; 0xdfc <malloc>
    153e:	ec 01       	movw	r28, r24
    1540:	00 97       	sbiw	r24, 0x00	; 0
    1542:	29 f0       	breq	.+10     	; 0x154e <calloc+0x2c>
    1544:	a8 01       	movw	r20, r16
    1546:	60 e0       	ldi	r22, 0x00	; 0
    1548:	70 e0       	ldi	r23, 0x00	; 0
    154a:	0e 94 b8 0a 	call	0x1570	; 0x1570 <memset>
    154e:	ce 01       	movw	r24, r28
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	1f 91       	pop	r17
    1556:	0f 91       	pop	r16
    1558:	08 95       	ret

0000155a <strnlen_P>:
    155a:	fc 01       	movw	r30, r24
    155c:	05 90       	lpm	r0, Z+
    155e:	61 50       	subi	r22, 0x01	; 1
    1560:	70 40       	sbci	r23, 0x00	; 0
    1562:	01 10       	cpse	r0, r1
    1564:	d8 f7       	brcc	.-10     	; 0x155c <strnlen_P+0x2>
    1566:	80 95       	com	r24
    1568:	90 95       	com	r25
    156a:	8e 0f       	add	r24, r30
    156c:	9f 1f       	adc	r25, r31
    156e:	08 95       	ret

00001570 <memset>:
    1570:	dc 01       	movw	r26, r24
    1572:	01 c0       	rjmp	.+2      	; 0x1576 <memset+0x6>
    1574:	6d 93       	st	X+, r22
    1576:	41 50       	subi	r20, 0x01	; 1
    1578:	50 40       	sbci	r21, 0x00	; 0
    157a:	e0 f7       	brcc	.-8      	; 0x1574 <memset+0x4>
    157c:	08 95       	ret

0000157e <strnlen>:
    157e:	fc 01       	movw	r30, r24
    1580:	61 50       	subi	r22, 0x01	; 1
    1582:	70 40       	sbci	r23, 0x00	; 0
    1584:	01 90       	ld	r0, Z+
    1586:	01 10       	cpse	r0, r1
    1588:	d8 f7       	brcc	.-10     	; 0x1580 <strnlen+0x2>
    158a:	80 95       	com	r24
    158c:	90 95       	com	r25
    158e:	8e 0f       	add	r24, r30
    1590:	9f 1f       	adc	r25, r31
    1592:	08 95       	ret

00001594 <fputc>:
    1594:	0f 93       	push	r16
    1596:	1f 93       	push	r17
    1598:	cf 93       	push	r28
    159a:	df 93       	push	r29
    159c:	fb 01       	movw	r30, r22
    159e:	23 81       	ldd	r18, Z+3	; 0x03
    15a0:	21 fd       	sbrc	r18, 1
    15a2:	03 c0       	rjmp	.+6      	; 0x15aa <fputc+0x16>
    15a4:	8f ef       	ldi	r24, 0xFF	; 255
    15a6:	9f ef       	ldi	r25, 0xFF	; 255
    15a8:	2c c0       	rjmp	.+88     	; 0x1602 <fputc+0x6e>
    15aa:	22 ff       	sbrs	r18, 2
    15ac:	16 c0       	rjmp	.+44     	; 0x15da <fputc+0x46>
    15ae:	46 81       	ldd	r20, Z+6	; 0x06
    15b0:	57 81       	ldd	r21, Z+7	; 0x07
    15b2:	24 81       	ldd	r18, Z+4	; 0x04
    15b4:	35 81       	ldd	r19, Z+5	; 0x05
    15b6:	42 17       	cp	r20, r18
    15b8:	53 07       	cpc	r21, r19
    15ba:	44 f4       	brge	.+16     	; 0x15cc <fputc+0x38>
    15bc:	a0 81       	ld	r26, Z
    15be:	b1 81       	ldd	r27, Z+1	; 0x01
    15c0:	9d 01       	movw	r18, r26
    15c2:	2f 5f       	subi	r18, 0xFF	; 255
    15c4:	3f 4f       	sbci	r19, 0xFF	; 255
    15c6:	31 83       	std	Z+1, r19	; 0x01
    15c8:	20 83       	st	Z, r18
    15ca:	8c 93       	st	X, r24
    15cc:	26 81       	ldd	r18, Z+6	; 0x06
    15ce:	37 81       	ldd	r19, Z+7	; 0x07
    15d0:	2f 5f       	subi	r18, 0xFF	; 255
    15d2:	3f 4f       	sbci	r19, 0xFF	; 255
    15d4:	37 83       	std	Z+7, r19	; 0x07
    15d6:	26 83       	std	Z+6, r18	; 0x06
    15d8:	14 c0       	rjmp	.+40     	; 0x1602 <fputc+0x6e>
    15da:	8b 01       	movw	r16, r22
    15dc:	ec 01       	movw	r28, r24
    15de:	fb 01       	movw	r30, r22
    15e0:	00 84       	ldd	r0, Z+8	; 0x08
    15e2:	f1 85       	ldd	r31, Z+9	; 0x09
    15e4:	e0 2d       	mov	r30, r0
    15e6:	09 95       	icall
    15e8:	89 2b       	or	r24, r25
    15ea:	e1 f6       	brne	.-72     	; 0x15a4 <fputc+0x10>
    15ec:	d8 01       	movw	r26, r16
    15ee:	16 96       	adiw	r26, 0x06	; 6
    15f0:	8d 91       	ld	r24, X+
    15f2:	9c 91       	ld	r25, X
    15f4:	17 97       	sbiw	r26, 0x07	; 7
    15f6:	01 96       	adiw	r24, 0x01	; 1
    15f8:	17 96       	adiw	r26, 0x07	; 7
    15fa:	9c 93       	st	X, r25
    15fc:	8e 93       	st	-X, r24
    15fe:	16 97       	sbiw	r26, 0x06	; 6
    1600:	ce 01       	movw	r24, r28
    1602:	df 91       	pop	r29
    1604:	cf 91       	pop	r28
    1606:	1f 91       	pop	r17
    1608:	0f 91       	pop	r16
    160a:	08 95       	ret

0000160c <__ultoa_invert>:
    160c:	fa 01       	movw	r30, r20
    160e:	aa 27       	eor	r26, r26
    1610:	28 30       	cpi	r18, 0x08	; 8
    1612:	51 f1       	breq	.+84     	; 0x1668 <__ultoa_invert+0x5c>
    1614:	20 31       	cpi	r18, 0x10	; 16
    1616:	81 f1       	breq	.+96     	; 0x1678 <__ultoa_invert+0x6c>
    1618:	e8 94       	clt
    161a:	6f 93       	push	r22
    161c:	6e 7f       	andi	r22, 0xFE	; 254
    161e:	6e 5f       	subi	r22, 0xFE	; 254
    1620:	7f 4f       	sbci	r23, 0xFF	; 255
    1622:	8f 4f       	sbci	r24, 0xFF	; 255
    1624:	9f 4f       	sbci	r25, 0xFF	; 255
    1626:	af 4f       	sbci	r26, 0xFF	; 255
    1628:	b1 e0       	ldi	r27, 0x01	; 1
    162a:	3e d0       	rcall	.+124    	; 0x16a8 <__ultoa_invert+0x9c>
    162c:	b4 e0       	ldi	r27, 0x04	; 4
    162e:	3c d0       	rcall	.+120    	; 0x16a8 <__ultoa_invert+0x9c>
    1630:	67 0f       	add	r22, r23
    1632:	78 1f       	adc	r23, r24
    1634:	89 1f       	adc	r24, r25
    1636:	9a 1f       	adc	r25, r26
    1638:	a1 1d       	adc	r26, r1
    163a:	68 0f       	add	r22, r24
    163c:	79 1f       	adc	r23, r25
    163e:	8a 1f       	adc	r24, r26
    1640:	91 1d       	adc	r25, r1
    1642:	a1 1d       	adc	r26, r1
    1644:	6a 0f       	add	r22, r26
    1646:	71 1d       	adc	r23, r1
    1648:	81 1d       	adc	r24, r1
    164a:	91 1d       	adc	r25, r1
    164c:	a1 1d       	adc	r26, r1
    164e:	20 d0       	rcall	.+64     	; 0x1690 <__ultoa_invert+0x84>
    1650:	09 f4       	brne	.+2      	; 0x1654 <__ultoa_invert+0x48>
    1652:	68 94       	set
    1654:	3f 91       	pop	r19
    1656:	2a e0       	ldi	r18, 0x0A	; 10
    1658:	26 9f       	mul	r18, r22
    165a:	11 24       	eor	r1, r1
    165c:	30 19       	sub	r19, r0
    165e:	30 5d       	subi	r19, 0xD0	; 208
    1660:	31 93       	st	Z+, r19
    1662:	de f6       	brtc	.-74     	; 0x161a <__ultoa_invert+0xe>
    1664:	cf 01       	movw	r24, r30
    1666:	08 95       	ret
    1668:	46 2f       	mov	r20, r22
    166a:	47 70       	andi	r20, 0x07	; 7
    166c:	40 5d       	subi	r20, 0xD0	; 208
    166e:	41 93       	st	Z+, r20
    1670:	b3 e0       	ldi	r27, 0x03	; 3
    1672:	0f d0       	rcall	.+30     	; 0x1692 <__ultoa_invert+0x86>
    1674:	c9 f7       	brne	.-14     	; 0x1668 <__ultoa_invert+0x5c>
    1676:	f6 cf       	rjmp	.-20     	; 0x1664 <__ultoa_invert+0x58>
    1678:	46 2f       	mov	r20, r22
    167a:	4f 70       	andi	r20, 0x0F	; 15
    167c:	40 5d       	subi	r20, 0xD0	; 208
    167e:	4a 33       	cpi	r20, 0x3A	; 58
    1680:	18 f0       	brcs	.+6      	; 0x1688 <__ultoa_invert+0x7c>
    1682:	49 5d       	subi	r20, 0xD9	; 217
    1684:	31 fd       	sbrc	r19, 1
    1686:	40 52       	subi	r20, 0x20	; 32
    1688:	41 93       	st	Z+, r20
    168a:	02 d0       	rcall	.+4      	; 0x1690 <__ultoa_invert+0x84>
    168c:	a9 f7       	brne	.-22     	; 0x1678 <__ultoa_invert+0x6c>
    168e:	ea cf       	rjmp	.-44     	; 0x1664 <__ultoa_invert+0x58>
    1690:	b4 e0       	ldi	r27, 0x04	; 4
    1692:	a6 95       	lsr	r26
    1694:	97 95       	ror	r25
    1696:	87 95       	ror	r24
    1698:	77 95       	ror	r23
    169a:	67 95       	ror	r22
    169c:	ba 95       	dec	r27
    169e:	c9 f7       	brne	.-14     	; 0x1692 <__ultoa_invert+0x86>
    16a0:	00 97       	sbiw	r24, 0x00	; 0
    16a2:	61 05       	cpc	r22, r1
    16a4:	71 05       	cpc	r23, r1
    16a6:	08 95       	ret
    16a8:	9b 01       	movw	r18, r22
    16aa:	ac 01       	movw	r20, r24
    16ac:	0a 2e       	mov	r0, r26
    16ae:	06 94       	lsr	r0
    16b0:	57 95       	ror	r21
    16b2:	47 95       	ror	r20
    16b4:	37 95       	ror	r19
    16b6:	27 95       	ror	r18
    16b8:	ba 95       	dec	r27
    16ba:	c9 f7       	brne	.-14     	; 0x16ae <__ultoa_invert+0xa2>
    16bc:	62 0f       	add	r22, r18
    16be:	73 1f       	adc	r23, r19
    16c0:	84 1f       	adc	r24, r20
    16c2:	95 1f       	adc	r25, r21
    16c4:	a0 1d       	adc	r26, r0
    16c6:	08 95       	ret

000016c8 <__prologue_saves__>:
    16c8:	2f 92       	push	r2
    16ca:	3f 92       	push	r3
    16cc:	4f 92       	push	r4
    16ce:	5f 92       	push	r5
    16d0:	6f 92       	push	r6
    16d2:	7f 92       	push	r7
    16d4:	8f 92       	push	r8
    16d6:	9f 92       	push	r9
    16d8:	af 92       	push	r10
    16da:	bf 92       	push	r11
    16dc:	cf 92       	push	r12
    16de:	df 92       	push	r13
    16e0:	ef 92       	push	r14
    16e2:	ff 92       	push	r15
    16e4:	0f 93       	push	r16
    16e6:	1f 93       	push	r17
    16e8:	cf 93       	push	r28
    16ea:	df 93       	push	r29
    16ec:	cd b7       	in	r28, 0x3d	; 61
    16ee:	de b7       	in	r29, 0x3e	; 62
    16f0:	ca 1b       	sub	r28, r26
    16f2:	db 0b       	sbc	r29, r27
    16f4:	0f b6       	in	r0, 0x3f	; 63
    16f6:	f8 94       	cli
    16f8:	de bf       	out	0x3e, r29	; 62
    16fa:	0f be       	out	0x3f, r0	; 63
    16fc:	cd bf       	out	0x3d, r28	; 61
    16fe:	09 94       	ijmp

00001700 <__epilogue_restores__>:
    1700:	2a 88       	ldd	r2, Y+18	; 0x12
    1702:	39 88       	ldd	r3, Y+17	; 0x11
    1704:	48 88       	ldd	r4, Y+16	; 0x10
    1706:	5f 84       	ldd	r5, Y+15	; 0x0f
    1708:	6e 84       	ldd	r6, Y+14	; 0x0e
    170a:	7d 84       	ldd	r7, Y+13	; 0x0d
    170c:	8c 84       	ldd	r8, Y+12	; 0x0c
    170e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1710:	aa 84       	ldd	r10, Y+10	; 0x0a
    1712:	b9 84       	ldd	r11, Y+9	; 0x09
    1714:	c8 84       	ldd	r12, Y+8	; 0x08
    1716:	df 80       	ldd	r13, Y+7	; 0x07
    1718:	ee 80       	ldd	r14, Y+6	; 0x06
    171a:	fd 80       	ldd	r15, Y+5	; 0x05
    171c:	0c 81       	ldd	r16, Y+4	; 0x04
    171e:	1b 81       	ldd	r17, Y+3	; 0x03
    1720:	aa 81       	ldd	r26, Y+2	; 0x02
    1722:	b9 81       	ldd	r27, Y+1	; 0x01
    1724:	ce 0f       	add	r28, r30
    1726:	d1 1d       	adc	r29, r1
    1728:	0f b6       	in	r0, 0x3f	; 63
    172a:	f8 94       	cli
    172c:	de bf       	out	0x3e, r29	; 62
    172e:	0f be       	out	0x3f, r0	; 63
    1730:	cd bf       	out	0x3d, r28	; 61
    1732:	ed 01       	movw	r28, r26
    1734:	08 95       	ret

00001736 <_exit>:
    1736:	f8 94       	cli

00001738 <__stop_program>:
    1738:	ff cf       	rjmp	.-2      	; 0x1738 <__stop_program>
